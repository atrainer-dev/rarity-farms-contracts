{
  "language": "Solidity",
  "sources": {
    "contracts/TestMinter.sol": {
      "content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\ncontract TestMinter {\n  string _name = \"Apple\";\n  string _symbol = \"APPLE\";\n  uint8 _decimals = 18;\n  uint256 _totalSupply;\n  mapping(uint256 => uint256) public _balanceOf;\n  mapping(address => bool) public minters;\n\n  struct Attributes {\n    bool paused;\n  }\n  Attributes public attributes;\n  event Mint(address indexed from, uint256 indexed to, uint256 amount);\n\n  constructor() {\n    minters[msg.sender] = true;\n    attributes.paused = false;\n  }\n\n  function mint(uint256 summoner, uint256 amount) external {\n    require(!attributes.paused, \"Contract is paused\");\n    require(minters[msg.sender] == true, \"Mint Access Denied\");\n    _totalSupply += amount;\n    _balanceOf[summoner] += amount;\n    emit Mint(msg.sender, summoner, amount);\n  }\n}\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}