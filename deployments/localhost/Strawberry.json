{
  "address": "0x202CCe504e04bEd6fC0521238dDf04Bc9E8E15aB",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BurnApproval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_transferAllowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "owner",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "spender",
          "type": "uint256"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "spender",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "attributes",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "weight",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "owner",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "summoner",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "burnAllowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "summoner",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "burner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "summoner",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAbilityDecreasers",
      "outputs": [
        {
          "internalType": "uint8[6]",
          "name": "",
          "type": "uint8[6]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAbilityIncreasers",
      "outputs": [
        {
          "internalType": "uint8[6]",
          "name": "",
          "type": "uint8[6]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPointDecreasers",
      "outputs": [
        {
          "internalType": "uint8[3]",
          "name": "",
          "type": "uint8[3]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPointIncreasers",
      "outputs": [
        {
          "internalType": "uint8[3]",
          "name": "",
          "type": "uint8[3]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "locked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "summoner",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "minters",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pausers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "removeMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "str",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "dex",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "con",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "inte",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "wis",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "char",
          "type": "uint8"
        }
      ],
      "name": "setAbilityDecreasers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "str",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "dex",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "con",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "inte",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "wis",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "char",
          "type": "uint8"
        }
      ],
      "name": "setAbilityIncreasers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "hp",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "mp",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "stamina",
          "type": "uint8"
        }
      ],
      "name": "setPointDecreasers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "hp",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "mp",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "stamina",
          "type": "uint8"
        }
      ],
      "name": "setPointIncreasers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_weight",
          "type": "uint8"
        }
      ],
      "name": "setWeight",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "executor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x910ac78f4187cb7ca43d93f8b200b6159686f634ca69ab5aa20ecb3c1bb05298",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x202CCe504e04bEd6fC0521238dDf04Bc9E8E15aB",
    "transactionIndex": 0,
    "gasUsed": "2810127",
    "logsBloom": "0x
    "blockHash": "0xcfa30631a93c62f8c37f908cb2e28eb10e89e514dee53b426e6d5963d3afbbb1",
    "transactionHash": "0x910ac78f4187cb7ca43d93f8b200b6159686f634ca69ab5aa20ecb3c1bb05298",
    "logs": [],
    "blockNumber": 18933150,
    "cumulativeGasUsed": "2810127",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "0646f8583f9c8fa3488c002332d9bd8c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BurnApproval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_transferAllowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"owner\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spender\",\"type\":\"uint256\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spender\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"attributes\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"weight\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"owner\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"summoner\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"burnAllowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"summoner\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"summoner\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAbilityDecreasers\",\"outputs\":[{\"internalType\":\"uint8[6]\",\"name\":\"\",\"type\":\"uint8[6]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAbilityIncreasers\",\"outputs\":[{\"internalType\":\"uint8[6]\",\"name\":\"\",\"type\":\"uint8[6]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPointDecreasers\",\"outputs\":[{\"internalType\":\"uint8[3]\",\"name\":\"\",\"type\":\"uint8[3]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPointIncreasers\",\"outputs\":[{\"internalType\":\"uint8[3]\",\"name\":\"\",\"type\":\"uint8[3]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"locked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"summoner\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pausers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"removeMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"str\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"dex\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"con\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"inte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"wis\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"char\",\"type\":\"uint8\"}],\"name\":\"setAbilityDecreasers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"str\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"dex\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"con\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"inte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"wis\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"char\",\"type\":\"uint8\"}],\"name\":\"setAbilityIncreasers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"hp\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"mp\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"stamina\",\"type\":\"uint8\"}],\"name\":\"setPointDecreasers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"hp\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"mp\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"stamina\",\"type\":\"uint8\"}],\"name\":\"setPointIncreasers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_weight\",\"type\":\"uint8\"}],\"name\":\"setWeight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"executor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/farms/fruit/Strawberry.sol\":\"Strawberry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/abstracts/Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"./RERC20.sol\\\";\\n\\nabstract contract RarityBurnable is RERC20 {\\n  mapping(address => mapping(uint256 => uint256)) public burnAllowance;\\n\\n  event Burn(uint256 indexed from, uint256 indexed to, uint256 amount);\\n  event BurnApproval(uint256 indexed from, address indexed to, uint256 amount);\\n\\n  function _burnApprove(\\n    uint256 from,\\n    address burner,\\n    uint256 amount\\n  ) internal returns (bool) {\\n    burnAllowance[burner][from] = amount;\\n    emit BurnApproval(from, burner, amount);\\n    return true;\\n  }\\n\\n  function _burn(uint256 dst, uint256 amount) internal {\\n    uint256 balance = _balanceOf[dst];\\n    require(balance >= amount, \\\"Balance too low\\\");\\n    _totalSupply -= amount;\\n    _balanceOf[dst] = balance - amount;\\n    emit Burn(dst, dst, amount);\\n  }\\n}\\n\",\"keccak256\":\"0x1a0aecb65c3686fde978a8af5fed838712037c9b8dbda091787c315451a4c749\",\"license\":\"MIT\"},\"contracts/abstracts/Lockable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nabstract contract Lockable {\\n  bool public locked = false;\\n\\n  function _isLocked() internal view returns (bool) {\\n    return locked == true;\\n  }\\n}\\n\",\"keccak256\":\"0xf2a1cf63ac300550967b2eb5caa021d6f26a3149afd1a8fee8ac5da777cffa94\",\"license\":\"MIT\"},\"contracts/abstracts/Mintable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"./RERC20.sol\\\";\\n\\nabstract contract RarityMintable is RERC20 {\\n  mapping(address => bool) public minters;\\n\\n  event Mint(uint256 indexed from, uint256 indexed to, uint256 amount);\\n\\n  function _mint(uint256 dst, uint256 amount) internal {\\n    _totalSupply += amount;\\n    _balanceOf[dst] += amount;\\n    emit Mint(dst, dst, amount);\\n  }\\n\\n  function _addMinter(address minter) internal {\\n    minters[minter] = true;\\n  }\\n\\n  function _removeMinter(address minter) internal {\\n    minters[minter] = false;\\n  }\\n}\\n\",\"keccak256\":\"0x319f2f4886cfeea3a731f104f49490d9d1101971f26c1f7a838aad42f2d249d3\",\"license\":\"MIT\"},\"contracts/abstracts/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nabstract contract Ownable {\\n  address public owner;\\n\\n  constructor() {\\n    owner = msg.sender;\\n  }\\n\\n  function _isOwner(address addr) internal view returns (bool) {\\n    return owner == addr;\\n  }\\n\\n  function _setOwner(address addr) internal returns (bool) {\\n    owner = addr;\\n    return true;\\n  }\\n}\\n\",\"keccak256\":\"0xc4263a694a12743fea22f2eaae9094cc65e79204898548d8fc8916231dcf86bd\",\"license\":\"MIT\"},\"contracts/abstracts/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nabstract contract Pausable {\\n  bool public paused;\\n  mapping(address => bool) public pausers;\\n\\n  constructor() {\\n    paused = false;\\n    pausers[msg.sender] = true;\\n  }\\n\\n  function _isPaused() internal view returns (bool) {\\n    return paused == true;\\n  }\\n\\n  function pause() external returns (bool) {\\n    require(pausers[msg.sender], \\\"Pause denied\\\");\\n    _pause();\\n    return true;\\n  }\\n\\n  function unpause() external returns (bool) {\\n    require(pausers[msg.sender], \\\"Unpause denied\\\");\\n    _unpause();\\n    return true;\\n  }\\n\\n  function _addPauser(address addr) internal returns (bool) {\\n    pausers[addr] = true;\\n    return true;\\n  }\\n\\n  function _removePauser(address addr) internal returns (bool) {\\n    pausers[addr] = false;\\n    return true;\\n  }\\n\\n  function _pause() internal {\\n    paused = true;\\n  }\\n\\n  function _unpause() internal {\\n    paused = false;\\n  }\\n}\\n\",\"keccak256\":\"0x97aa1cffaa62bf33d2d70b57e516c689c9cba0c0a6af2ea3c8662f04d4c85bb6\",\"license\":\"MIT\"},\"contracts/abstracts/RERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"./Rarity.sol\\\";\\nimport \\\"./Ownable.sol\\\";\\nimport \\\"./Pausable.sol\\\";\\n\\ninterface IRarityFungible {\\n  event Transfer(uint256 indexed from, uint256 indexed to, uint256 amount);\\n  event Approval(uint256 indexed from, uint256 indexed to, uint256 amount);\\n\\n  function name() external view returns (string memory);\\n\\n  function symbol() external view returns (string memory);\\n\\n  function decimals() external view returns (uint8);\\n\\n  function totalSupply() external view returns (uint256);\\n\\n  function balanceOf(uint256 owner) external view returns (uint256);\\n\\n  function allowance(uint256 owner, uint256 spender)\\n    external\\n    view\\n    returns (uint256);\\n\\n  function approve(\\n    uint256 from,\\n    uint256 spender,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  function transfer(\\n    uint256 from,\\n    uint256 to,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  function transferFrom(\\n    uint256 executor,\\n    uint256 from,\\n    uint256 to,\\n    uint256 amount\\n  ) external returns (bool);\\n}\\n\\nabstract contract RERC20 is IRarityFungible, Rarity, Ownable, Pausable {\\n  string _name;\\n  string _symbol;\\n  uint256 public _totalSupply = 0;\\n  uint8 public constant _decimals = 18;\\n\\n  mapping(uint256 => uint256) public _balanceOf;\\n  mapping(uint256 => mapping(uint256 => uint256)) public _transferAllowance;\\n\\n  constructor() Rarity() Ownable() Pausable() {}\\n\\n  function name() external view override returns (string memory) {\\n    return _name;\\n  }\\n\\n  function symbol() external view override returns (string memory) {\\n    return _symbol;\\n  }\\n\\n  function decimals() external view override returns (uint8) {\\n    return _decimals;\\n  }\\n\\n  function totalSupply() external view override returns (uint256) {\\n    return _totalSupply;\\n  }\\n\\n  function balanceOf(uint256 owner) external view override returns (uint256) {\\n    return _balanceOf[owner];\\n  }\\n\\n  function allowance(uint256 owner, uint256 spender)\\n    external\\n    view\\n    override\\n    returns (uint256)\\n  {\\n    return _transferAllowance[owner][spender];\\n  }\\n\\n  function approve(\\n    uint256 from,\\n    uint256 spender,\\n    uint256 amount\\n  ) external override returns (bool) {\\n    require(_isRarityApprovedOrOwner(from), \\\"Must be owner\\\");\\n    _transferAllowance[from][spender] = amount;\\n\\n    emit Approval(from, spender, amount);\\n    return true;\\n  }\\n\\n  function transfer(\\n    uint256 from,\\n    uint256 to,\\n    uint256 amount\\n  ) external override returns (bool) {\\n    require(!_isPaused(), \\\"Contract is paused\\\");\\n    require(_isRarityApprovedOrOwner(from), \\\"Must be owner\\\");\\n    _transferTokens(from, to, amount);\\n    return true;\\n  }\\n\\n  function transferFrom(\\n    uint256 executor,\\n    uint256 from,\\n    uint256 to,\\n    uint256 amount\\n  ) external override returns (bool) {\\n    require(!_isPaused(), \\\"Contract is paused\\\");\\n    require(_isRarityApprovedOrOwner(executor), \\\"Must be owner\\\");\\n    uint256 spender = executor;\\n    uint256 allow = _transferAllowance[from][spender];\\n    require(amount <= allow, \\\"Transfer amount greater than approval\\\");\\n    _transferTokens(from, to, amount);\\n    _transferAllowance[from][spender] = allow - amount;\\n    return true;\\n  }\\n\\n  function _transferTokens(\\n    uint256 from,\\n    uint256 to,\\n    uint256 amount\\n  ) internal {\\n    _balanceOf[from] -= amount;\\n    _balanceOf[to] += amount;\\n\\n    emit Transfer(from, to, amount);\\n  }\\n\\n  function setOwner(address _owner) external returns (bool) {\\n    require(_isOwner(msg.sender), \\\"Must be owner\\\");\\n    _setOwner(_owner);\\n    return true;\\n  }\\n}\\n\",\"keccak256\":\"0xd6215634dcd97fabaed5fe09f7520666de4ab9effe5c3dedf2e9e39b7558e6fc\",\"license\":\"MIT\"},\"contracts/abstracts/Rarity.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ninterface IRarity {\\n  function level(uint256) external view returns (uint256);\\n\\n  function getApproved(uint256) external view returns (address);\\n\\n  function isApprovedForAll(address owner, address operator)\\n    external\\n    view\\n    returns (bool);\\n\\n  function ownerOf(uint256) external view returns (address);\\n\\n  function summoner(uint256)\\n    external\\n    view\\n    returns (\\n      uint256,\\n      uint256,\\n      uint256,\\n      uint256\\n    );\\n\\n  function adventure(uint256) external;\\n}\\n\\ninterface IRarityAttributes {\\n  function ability_scores(uint256)\\n    external\\n    view\\n    returns (\\n      uint32,\\n      uint32,\\n      uint32,\\n      uint32,\\n      uint32,\\n      uint32\\n    );\\n}\\n\\ninterface IRarityRandomCodex {\\n  function d20(uint256) external view returns (uint256);\\n}\\n\\nabstract contract Rarity {\\n  IRarity constant _rm = IRarity(0xce761D788DF608BD21bdd59d6f4B54b2e27F25Bb);\\n  IRarityAttributes constant _attr =\\n    IRarityAttributes(0xB5F5AF1087A8DA62A23b08C00C6ec9af21F397a1);\\n  IRarityRandomCodex constant _random =\\n    IRarityRandomCodex(0x7426dBE5207C2b5DaC57d8e55F0959fcD99661D4);\\n\\n  constructor() {}\\n\\n  function _isRarityOwner(uint256 _summoner) internal view returns (bool) {\\n    return _rm.ownerOf(_summoner) == msg.sender;\\n  }\\n\\n  function _isRarityApproved(uint256 _summoner) internal view returns (bool) {\\n    return\\n      _rm.getApproved(_summoner) == msg.sender ||\\n      _rm.isApprovedForAll(_rm.ownerOf(_summoner), msg.sender);\\n  }\\n\\n  function _isRarityApprovedOrOwner(uint256 _summoner)\\n    internal\\n    view\\n    returns (bool)\\n  {\\n    return _isRarityApproved(_summoner) || _isRarityOwner(_summoner);\\n  }\\n\\n  function _getRarity() internal pure returns (IRarity) {\\n    return _rm;\\n  }\\n\\n  function _getRarityAttributes() internal pure returns (IRarityAttributes) {\\n    return _attr;\\n  }\\n\\n  function _getRarityRandom() internal pure returns (IRarityRandomCodex) {\\n    return _random;\\n  }\\n\\n  function _getSummonerAttributes(uint256 _summoner)\\n    internal\\n    view\\n    returns (uint32[6] memory)\\n  {\\n    (\\n      uint32 _str,\\n      uint32 _dex,\\n      uint32 _con,\\n      uint32 _int,\\n      uint32 _wis,\\n      uint32 _cha\\n    ) = _attr.ability_scores(_summoner);\\n    uint32[6] memory scores = [_str, _dex, _con, _int, _wis, _cha];\\n    return scores;\\n  }\\n\\n  function _getSummoner(uint256 _summoner)\\n    internal\\n    view\\n    returns (uint256[4] memory)\\n  {\\n    (uint256 _xp, uint256 _log, uint256 _class, uint256 _level) = _rm.summoner(\\n      _summoner\\n    );\\n    uint256[4] memory result = [_xp, _log, _class, _level];\\n    return result;\\n  }\\n}\\n\",\"keccak256\":\"0x3bbc694ec9e23e448ca912f2bd9510c567a2e69e582725f6b02e9e617b35f405\",\"license\":\"MIT\"},\"contracts/abstracts/Resource.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"./RERC20.sol\\\";\\nimport \\\"./Mintable.sol\\\";\\nimport \\\"./Burnable.sol\\\";\\nimport \\\"./Lockable.sol\\\";\\n\\nabstract contract Resource is RERC20, RarityBurnable, RarityMintable, Lockable {\\n  struct ResourceAttributes {\\n    uint8[3] pointIncreasers;\\n    uint8[3] pointDecreasers;\\n    uint8[6] abilityIncreasers;\\n    uint8[6] abilityDecreasers;\\n    uint8 weight;\\n  }\\n\\n  ResourceAttributes public attributes;\\n\\n  constructor() {}\\n\\n  function lock() external {\\n    require(_isOwner(msg.sender), \\\"Must be owner\\\");\\n    locked = true;\\n  }\\n\\n  function mint(uint256 summoner, uint256 amount) external {\\n    require(!_isPaused(), \\\"Contract is paused\\\");\\n    require(minters[msg.sender] == true, \\\"Mint Access Denied\\\");\\n    _mint(summoner, amount);\\n  }\\n\\n  function addMinter(address minter) external {\\n    require(msg.sender == owner, \\\"Must be owner\\\");\\n    _addMinter(minter);\\n  }\\n\\n  function removeMinter(address minter) external {\\n    require(msg.sender == owner, \\\"Must be owner\\\");\\n    _removeMinter(minter);\\n  }\\n\\n  function burn(uint256 summoner, uint256 amount) external {\\n    require(!_isPaused(), \\\"Contract is paused\\\");\\n    require(_isRarityOwner(summoner), \\\"Must be owner\\\");\\n    _burn(summoner, amount);\\n  }\\n\\n  function burnFrom(uint256 summoner, uint256 amount) external {\\n    require(!_isPaused(), \\\"Contract is paused\\\");\\n    require(amount <= burnAllowance[msg.sender][summoner], \\\"Burn > Approve\\\");\\n    _burn(summoner, amount);\\n    burnAllowance[msg.sender][summoner] -= amount;\\n  }\\n\\n  function burnApprove(\\n    uint256 summoner,\\n    address burner,\\n    uint256 amount\\n  ) external {\\n    require(!_isPaused(), \\\"Contract is paused\\\");\\n    require(_isRarityOwner(summoner), \\\"Must be owner\\\");\\n    _burnApprove(summoner, burner, amount);\\n  }\\n\\n  function setPointIncreasers(\\n    uint8 hp,\\n    uint8 mp,\\n    uint8 stamina\\n  ) external {\\n    require(!_isLocked(), \\\"Resource Locked\\\");\\n    require(_isOwner(msg.sender), \\\"Must be owner\\\");\\n    attributes.pointIncreasers = [hp, mp, stamina];\\n  }\\n\\n  function setPointDecreasers(\\n    uint8 hp,\\n    uint8 mp,\\n    uint8 stamina\\n  ) external {\\n    require(!_isLocked(), \\\"Resource Locked\\\");\\n    require(_isOwner(msg.sender), \\\"Must be owner\\\");\\n    attributes.pointDecreasers = [hp, mp, stamina];\\n  }\\n\\n  function setAbilityIncreasers(\\n    uint8 str,\\n    uint8 dex,\\n    uint8 con,\\n    uint8 inte,\\n    uint8 wis,\\n    uint8 char\\n  ) external {\\n    require(!_isLocked(), \\\"Resource Locked\\\");\\n    require(_isOwner(msg.sender), \\\"Must be owner\\\");\\n    attributes.abilityIncreasers = [str, dex, con, inte, wis, char];\\n  }\\n\\n  function setAbilityDecreasers(\\n    uint8 str,\\n    uint8 dex,\\n    uint8 con,\\n    uint8 inte,\\n    uint8 wis,\\n    uint8 char\\n  ) external {\\n    require(!_isLocked(), \\\"Resource Locked\\\");\\n    require(_isOwner(msg.sender), \\\"Must be owner\\\");\\n    attributes.abilityDecreasers = [str, dex, con, inte, wis, char];\\n  }\\n\\n  function setWeight(uint8 _weight) external {\\n    require(!_isLocked(), \\\"Resource Locked\\\");\\n    require(_isOwner(msg.sender), \\\"Must be owner\\\");\\n    attributes.weight = _weight;\\n  }\\n\\n  function getAbilityIncreasers() external view returns (uint8[6] memory) {\\n    return attributes.abilityIncreasers;\\n  }\\n\\n  function getAbilityDecreasers() external view returns (uint8[6] memory) {\\n    return attributes.abilityDecreasers;\\n  }\\n\\n  function getPointIncreasers() external view returns (uint8[3] memory) {\\n    return attributes.pointIncreasers;\\n  }\\n\\n  function getPointDecreasers() external view returns (uint8[3] memory) {\\n    return attributes.pointDecreasers;\\n  }\\n}\\n\",\"keccak256\":\"0xde57e6ed4d3183633b108c4f46b3cae3194f8e79f57df44044184639f02587ec\",\"license\":\"MIT\"},\"contracts/farms/fruit/Strawberry.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"../../abstracts/Resource.sol\\\";\\n\\ncontract Strawberry is Resource {\\n  constructor() Resource() RERC20() {\\n    _name = \\\"Strawberry\\\";\\n    _symbol = \\\"STRAWBERRY\\\";\\n\\n    attributes.weight = 1;\\n    attributes.pointIncreasers = [1, 0, 0];\\n  }\\n}\\n\",\"keccak256\":\"0x6ea943cabc108ce54b3703965214fc987944af1eb5bf70f69f67682659ef34f7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405260006004556000600960006101000a81548160ff0219169083151502179055503480156200003157600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060146101000a81548160ff02191690831515021790555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506040518060400160405280600a81526020017f53747261776265727279000000000000000000000000000000000000000000008152506002908051906020019062000130929190620001e1565b506040518060400160405280600a81526020017f5354524157424552525900000000000000000000000000000000000000000000815250600390805190602001906200017e929190620001e1565b506001600a60040160006101000a81548160ff021916908360ff1602179055506040518060600160405280600160ff168152602001600060ff168152602001600060ff16815250600a600001906003620001da92919062000272565b5062000397565b828054620001ef9062000332565b90600052602060002090601f0160209004810192826200021357600085556200025f565b82601f106200022e57805160ff19168380011785556200025f565b828001600101855582156200025f579182015b828111156200025e57825182559160200191906001019062000241565b5b5090506200026e919062000313565b5090565b826003601f01602090048101928215620003005791602002820160005b83821115620002cf57835183826101000a81548160ff021916908360ff16021790555092602001926001016020816000010492830192600103026200028f565b8015620002fe5782816101000a81549060ff0219169055600101602081600001049283019260010302620002cf565b505b5090506200030f919062000313565b5090565b5b808211156200032e57600081600090555060010162000314565b5090565b600060028204905060018216806200034b57607f821691505b6020821081141562000362576200036162000368565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b612f2880620003a76000396000f3fe608060405234801561001057600080fd5b506004361061023d5760003560e01c80638769fd411161013b578063b390c0ab116100b8578063e0c331e11161007c578063e0c331e1146106cc578063e8a2e827146106e8578063e99583a414610706578063f46eccc414610736578063f83d08ba146107665761023d565b8063b390c0ab14610616578063b866c8a414610632578063c0d655bf14610662578063cca16fa81461067e578063cf309012146106ae5761023d565b806393fd5678116100ff57806393fd56781461057257806395d89b4114610590578063983b2d56146105ae5780639cc7f708146105ca578063af946adc146105fa5761023d565b80638769fd41146104ba5780638856f779146104d65780638da5cb5b1461050657806390dd26271461052457806393e1ea41146105545761023d565b806332424aa3116101c95780635c975abb1161018d5780635c975abb146104005780636a0d343a1461041e5780637ae4841f1461044e57806380f51c121461046c5780638456cb591461049c5761023d565b806332424aa31461036c5780633eaaf86b1461038a5780633f4ba83a146103a857806345ba83e3146103c65780634a2edb08146103e25761023d565b806318160ddd1161021057806318160ddd146102dc5780631b2ef1ca146102fa5780632c983a29146103165780633092afd514610332578063313ce5671461034e5761023d565b806306fdde03146102425780630c68efe3146102605780630d99bd6c1461027c57806313af4035146102ac575b600080fd5b61024a610770565b6040516102579190612959565b60405180910390f35b61027a600480360381019061027591906123e5565b610802565b005b6102966004803603810190610291919061234b565b6108a3565b6040516102a39190612a9b565b60405180910390f35b6102c660048036038101906102c191906122f1565b6108c8565b6040516102d3919061293e565b60405180910390f35b6102e4610925565b6040516102f19190612a9b565b60405180910390f35b610314600480360381019061030f9190612438565b61092f565b005b610330600480360381019061032b9190612532565b610a18565b005b61034c600480360381019061034791906122f1565b610ac9565b005b610356610b63565b6040516103639190612ab6565b60405180910390f35b610374610b6c565b6040516103819190612ab6565b60405180910390f35b610392610b71565b60405161039f9190612a9b565b60405180910390f35b6103b0610b77565b6040516103bd919061293e565b60405180910390f35b6103e060048036038101906103db91906125b2565b610c14565b005b6103ea610d11565b6040516103f79190612908565b60405180910390f35b610408610d85565b604051610415919061293e565b60405180910390f35b61043860048036038101906104339190612438565b610d98565b6040516104459190612a9b565b60405180910390f35b610456610dbd565b6040516104639190612923565b60405180910390f35b610486600480360381019061048191906122f1565b610e31565b604051610493919061293e565b60405180910390f35b6104a4610e51565b6040516104b1919061293e565b60405180910390f35b6104d460048036038101906104cf9190612438565b610eee565b005b6104f060048036038101906104eb91906124cb565b61103e565b6040516104fd919061293e565b60405180910390f35b61050e61118e565b60405161051b91906128c4565b60405180910390f35b61053e60048036038101906105399190612478565b6111b2565b60405161054b919061293e565b60405180910390f35b61055c61125a565b6040516105699190612ab6565b60405180910390f35b61057a611273565b6040516105879190612908565b60405180910390f35b6105986112e7565b6040516105a59190612959565b60405180910390f35b6105c860048036038101906105c391906122f1565b611379565b005b6105e460048036038101906105df91906123b8565b611413565b6040516105f19190612a9b565b60405180910390f35b610614600480360381019061060f919061255f565b611430565b005b610630600480360381019061062b9190612438565b611506565b005b61064c60048036038101906106479190612478565b6115a4565b604051610659919061293e565b60405180910390f35b61067c6004803603810190610677919061255f565b61165b565b005b61069860048036038101906106939190612438565b611731565b6040516106a59190612a9b565b60405180910390f35b6106b6611760565b6040516106c3919061293e565b60405180910390f35b6106e660048036038101906106e191906125b2565b611773565b005b6106f0611870565b6040516106fd9190612923565b60405180910390f35b610720600480360381019061071b91906123b8565b6118e4565b60405161072d9190612a9b565b60405180910390f35b610750600480360381019061074b91906122f1565b6118fc565b60405161075d919061293e565b60405180910390f35b61076e61191c565b005b60606002805461077f90612c59565b80601f01602080910402602001604051908101604052809291908181526020018280546107ab90612c59565b80156107f85780601f106107cd576101008083540402835291602001916107f8565b820191906000526020600020905b8154815290600101906020018083116107db57829003601f168201915b5050505050905090565b61080a611981565b1561084a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084190612a5b565b60405180910390fd5b6108538361199f565b610892576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088990612a1b565b60405180910390fd5b61089d838383611a73565b50505050565b6007602052816000526040600020602052806000526040600020600091509150505481565b60006108d333611b24565b610912576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090990612a1b565b60405180910390fd5b61091b82611b7c565b5060019050919050565b6000600454905090565b610937611981565b15610977576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096e90612a5b565b60405180910390fd5b60011515600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610a0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a01906129fb565b60405180910390fd5b610a148282611bc7565b5050565b610a20611c47565b15610a60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a579061299b565b60405180910390fd5b610a6933611b24565b610aa8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9f90612a1b565b60405180910390fd5b80600a60040160006101000a81548160ff021916908360ff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4e90612a1b565b60405180910390fd5b610b6081611c65565b50565b60006012905090565b601281565b60045481565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610c05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bfc90612a7b565b60405180910390fd5b610c0d611cc0565b6001905090565b610c1c611c47565b15610c5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c539061299b565b60405180910390fd5b610c6533611b24565b610ca4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9b90612a1b565b60405180910390fd5b6040518060c001604052808760ff1660ff1681526020018660ff1660ff1681526020018560ff1660ff1681526020018460ff1660ff1681526020018360ff1660ff1681526020018260ff1660ff16815250600a600201906006610d089291906120f3565b50505050505050565b610d1961218d565b600a600101600380602002604051908101604052809291908260038015610d7b576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411610d445790505b5050505050905090565b600060149054906101000a900460ff1681565b6006602052816000526040600020602052806000526040600020600091509150505481565b610dc56121af565b600a600201600680602002604051908101604052809291908260068015610e27576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411610df05790505b5050505050905090565b60016020528060005260406000206000915054906101000a900460ff1681565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610edf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed6906129db565b60405180910390fd5b610ee7611cdc565b6001905090565b610ef6611981565b15610f36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2d90612a5b565b60405180910390fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054811115610fc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc0906129bb565b60405180910390fd5b610fd38282611cf9565b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060008282546110339190612b9d565b925050819055505050565b6000611048611981565b15611088576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107f90612a5b565b60405180910390fd5b61109185611dce565b6110d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110c790612a1b565b60405180910390fd5b6000859050600060066000878152602001908152602001600020600083815260200190815260200160002054905080841115611141576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113890612a3b565b60405180910390fd5b61114c868686611df0565b83816111589190612b9d565b60066000888152602001908152602001600020600084815260200190815260200160002081905550600192505050949350505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006111bc611981565b156111fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f390612a5b565b60405180910390fd5b61120584611dce565b611244576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123b90612a1b565b60405180910390fd5b61124f848484611df0565b600190509392505050565b600a8060040160009054906101000a900460ff16905081565b61127b61218d565b600a6000016003806020026040519081016040528092919082600380156112dd576020028201916000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116112a65790505b5050505050905090565b6060600380546112f690612c59565b80601f016020809104026020016040519081016040528092919081815260200182805461132290612c59565b801561136f5780601f106113445761010080835404028352916020019161136f565b820191906000526020600020905b81548152906001019060200180831161135257829003601f168201915b5050505050905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611407576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113fe90612a1b565b60405180910390fd5b61141081611e82565b50565b600060056000838152602001908152602001600020549050919050565b611438611c47565b15611478576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146f9061299b565b60405180910390fd5b61148133611b24565b6114c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114b790612a1b565b60405180910390fd5b60405180606001604052808460ff1660ff1681526020018360ff1660ff1681526020018260ff1660ff16815250600a6001019060036115009291906121d1565b50505050565b61150e611981565b1561154e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154590612a5b565b60405180910390fd5b6115578261199f565b611596576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158d90612a1b565b60405180910390fd5b6115a08282611cf9565b5050565b60006115af84611dce565b6115ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115e590612a1b565b60405180910390fd5b816006600086815260200190815260200160002060008581526020019081526020016000208190555082847f08aaf4f7dd1adfa5bfe7067dea5b4ebd7e119d43257438a9189f37d7044eb09a846040516116489190612a9b565b60405180910390a3600190509392505050565b611663611c47565b156116a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169a9061299b565b60405180910390fd5b6116ac33611b24565b6116eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116e290612a1b565b60405180910390fd5b60405180606001604052808460ff1660ff1681526020018360ff1660ff1681526020018260ff1660ff16815250600a60000190600361172b9291906121d1565b50505050565b600060066000848152602001908152602001600020600083815260200190815260200160002054905092915050565b600960009054906101000a900460ff1681565b61177b611c47565b156117bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117b29061299b565b60405180910390fd5b6117c433611b24565b611803576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117fa90612a1b565b60405180910390fd5b6040518060c001604052808760ff1660ff1681526020018660ff1660ff1681526020018560ff1660ff1681526020018460ff1660ff1681526020018360ff1660ff1681526020018260ff1660ff16815250600a6003019060066118679291906120f3565b50505050505050565b6118786121af565b600a6003016006806020026040519081016040528092919082600680156118da576020028201916000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116118a35790505b5050505050905090565b60056020528060005260406000206000915090505481565b60086020528060005260406000206000915054906101000a900460ff1681565b61192533611b24565b611964576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161195b90612a1b565b60405180910390fd5b6001600960006101000a81548160ff021916908315150217905550565b600060011515600060149054906101000a900460ff16151514905090565b60003373ffffffffffffffffffffffffffffffffffffffff1673ce761d788df608bd21bdd59d6f4b54b2e27f25bb73ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b8152600401611a059190612a9b565b60206040518083038186803b158015611a1d57600080fd5b505afa158015611a31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a55919061231e565b73ffffffffffffffffffffffffffffffffffffffff16149050919050565b600081600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff16847f25513def906e48f9e4a3b482e5ff228d356d8dda4744112c24c666c2d270fbeb84604051611b119190612a9b565b60405180910390a3600190509392505050565b60008173ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16149050919050565b6000816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b8060046000828254611bd99190612b47565b9250508190555080600560008481526020019081526020016000206000828254611c039190612b47565b9250508190555081827f070aa035fe0a09f0d9305bdc2d7a5d93cd4733db3b1ff869b4a7033c9501909a83604051611c3b9190612a9b565b60405180910390a35050565b600060011515600960009054906101000a900460ff16151514905090565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008060146101000a81548160ff021916908315150217905550565b6001600060146101000a81548160ff021916908315150217905550565b60006005600084815260200190815260200160002054905081811015611d54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d4b9061297b565b60405180910390fd5b8160046000828254611d669190612b9d565b925050819055508181611d799190612b9d565b600560008581526020019081526020016000208190555082837f5af801e983cfd842de8b0797a2d6077db3ac2dea16571e0c7f5080291ca1b93484604051611dc19190612a9b565b60405180910390a3505050565b6000611dd982611edd565b80611de95750611de88261199f565b5b9050919050565b80600560008581526020019081526020016000206000828254611e139190612b9d565b9250508190555080600560008481526020019081526020016000206000828254611e3d9190612b47565b9250508190555081837faf6151f5085accf2d57e1e7bf7601d3b3982e0de7e9a90f032f8554de9c104f683604051611e759190612a9b565b60405180910390a3505050565b6001600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60003373ffffffffffffffffffffffffffffffffffffffff1673ce761d788df608bd21bdd59d6f4b54b2e27f25bb73ffffffffffffffffffffffffffffffffffffffff1663081812fc846040518263ffffffff1660e01b8152600401611f439190612a9b565b60206040518083038186803b158015611f5b57600080fd5b505afa158015611f6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f93919061231e565b73ffffffffffffffffffffffffffffffffffffffff1614806120ec575073ce761d788df608bd21bdd59d6f4b54b2e27f25bb73ffffffffffffffffffffffffffffffffffffffff1663e985e9c573ce761d788df608bd21bdd59d6f4b54b2e27f25bb73ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b815260040161202d9190612a9b565b60206040518083038186803b15801561204557600080fd5b505afa158015612059573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061207d919061231e565b336040518363ffffffff1660e01b815260040161209b9291906128df565b60206040518083038186803b1580156120b357600080fd5b505afa1580156120c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120eb919061238b565b5b9050919050565b826006601f0160209004810192821561217c5791602002820160005b8382111561214d57835183826101000a81548160ff021916908360ff160217905550926020019260010160208160000104928301926001030261210f565b801561217a5782816101000a81549060ff021916905560010160208160000104928301926001030261214d565b505b509050612189919061226b565b5090565b6040518060600160405280600390602082028036833780820191505090505090565b6040518060c00160405280600690602082028036833780820191505090505090565b826003601f0160209004810192821561225a5791602002820160005b8382111561222b57835183826101000a81548160ff021916908360ff16021790555092602001926001016020816000010492830192600103026121ed565b80156122585782816101000a81549060ff021916905560010160208160000104928301926001030261222b565b505b509050612267919061226b565b5090565b5b8082111561228457600081600090555060010161226c565b5090565b60008135905061229781612e96565b92915050565b6000815190506122ac81612e96565b92915050565b6000815190506122c181612ead565b92915050565b6000813590506122d681612ec4565b92915050565b6000813590506122eb81612edb565b92915050565b60006020828403121561230757612306612ce9565b5b600061231584828501612288565b91505092915050565b60006020828403121561233457612333612ce9565b5b60006123428482850161229d565b91505092915050565b6000806040838503121561236257612361612ce9565b5b600061237085828601612288565b9250506020612381858286016122c7565b9150509250929050565b6000602082840312156123a1576123a0612ce9565b5b60006123af848285016122b2565b91505092915050565b6000602082840312156123ce576123cd612ce9565b5b60006123dc848285016122c7565b91505092915050565b6000806000606084860312156123fe576123fd612ce9565b5b600061240c868287016122c7565b935050602061241d86828701612288565b925050604061242e868287016122c7565b9150509250925092565b6000806040838503121561244f5761244e612ce9565b5b600061245d858286016122c7565b925050602061246e858286016122c7565b9150509250929050565b60008060006060848603121561249157612490612ce9565b5b600061249f868287016122c7565b93505060206124b0868287016122c7565b92505060406124c1868287016122c7565b9150509250925092565b600080600080608085870312156124e5576124e4612ce9565b5b60006124f3878288016122c7565b9450506020612504878288016122c7565b9350506040612515878288016122c7565b9250506060612526878288016122c7565b91505092959194509250565b60006020828403121561254857612547612ce9565b5b6000612556848285016122dc565b91505092915050565b60008060006060848603121561257857612577612ce9565b5b6000612586868287016122dc565b9350506020612597868287016122dc565b92505060406125a8868287016122dc565b9150509250925092565b60008060008060008060c087890312156125cf576125ce612ce9565b5b60006125dd89828a016122dc565b96505060206125ee89828a016122dc565b95505060406125ff89828a016122dc565b945050606061261089828a016122dc565b935050608061262189828a016122dc565b92505060a061263289828a016122dc565b9150509295509295509295565b600061264b83836128a6565b60208301905092915050565b61266081612bd1565b82525050565b61266f81612ae5565b6126798184612b20565b925061268482612ad1565b8060005b838110156126b557815161269c878261263f565b96506126a783612b06565b925050600181019050612688565b505050505050565b6126c681612af0565b6126d08184612b2b565b92506126db82612adb565b8060005b8381101561270c5781516126f3878261263f565b96506126fe83612b13565b9250506001810190506126df565b505050505050565b61271d81612be3565b82525050565b600061272e82612afb565b6127388185612b36565b9350612748818560208601612c26565b61275181612cee565b840191505092915050565b6000612769600f83612b36565b915061277482612cff565b602082019050919050565b600061278c600f83612b36565b915061279782612d28565b602082019050919050565b60006127af600e83612b36565b91506127ba82612d51565b602082019050919050565b60006127d2600c83612b36565b91506127dd82612d7a565b602082019050919050565b60006127f5601283612b36565b915061280082612da3565b602082019050919050565b6000612818600d83612b36565b915061282382612dcc565b602082019050919050565b600061283b602583612b36565b915061284682612df5565b604082019050919050565b600061285e601283612b36565b915061286982612e44565b602082019050919050565b6000612881600e83612b36565b915061288c82612e6d565b602082019050919050565b6128a081612c0f565b82525050565b6128af81612c19565b82525050565b6128be81612c19565b82525050565b60006020820190506128d96000830184612657565b92915050565b60006040820190506128f46000830185612657565b6129016020830184612657565b9392505050565b600060608201905061291d6000830184612666565b92915050565b600060c08201905061293860008301846126bd565b92915050565b60006020820190506129536000830184612714565b92915050565b600060208201905081810360008301526129738184612723565b905092915050565b600060208201905081810360008301526129948161275c565b9050919050565b600060208201905081810360008301526129b48161277f565b9050919050565b600060208201905081810360008301526129d4816127a2565b9050919050565b600060208201905081810360008301526129f4816127c5565b9050919050565b60006020820190508181036000830152612a14816127e8565b9050919050565b60006020820190508181036000830152612a348161280b565b9050919050565b60006020820190508181036000830152612a548161282e565b9050919050565b60006020820190508181036000830152612a7481612851565b9050919050565b60006020820190508181036000830152612a9481612874565b9050919050565b6000602082019050612ab06000830184612897565b92915050565b6000602082019050612acb60008301846128b5565b92915050565b6000819050919050565b6000819050919050565b600060039050919050565b600060069050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b6000612b5282612c0f565b9150612b5d83612c0f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612b9257612b91612c8b565b5b828201905092915050565b6000612ba882612c0f565b9150612bb383612c0f565b925082821015612bc657612bc5612c8b565b5b828203905092915050565b6000612bdc82612bef565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015612c44578082015181840152602081019050612c29565b83811115612c53576000848401525b50505050565b60006002820490506001821680612c7157607f821691505b60208210811415612c8557612c84612cba565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f42616c616e636520746f6f206c6f770000000000000000000000000000000000600082015250565b7f5265736f75726365204c6f636b65640000000000000000000000000000000000600082015250565b7f4275726e203e20417070726f7665000000000000000000000000000000000000600082015250565b7f50617573652064656e6965640000000000000000000000000000000000000000600082015250565b7f4d696e74204163636573732044656e6965640000000000000000000000000000600082015250565b7f4d757374206265206f776e657200000000000000000000000000000000000000600082015250565b7f5472616e7366657220616d6f756e742067726561746572207468616e2061707060008201527f726f76616c000000000000000000000000000000000000000000000000000000602082015250565b7f436f6e7472616374206973207061757365640000000000000000000000000000600082015250565b7f556e70617573652064656e696564000000000000000000000000000000000000600082015250565b612e9f81612bd1565b8114612eaa57600080fd5b50565b612eb681612be3565b8114612ec157600080fd5b50565b612ecd81612c0f565b8114612ed857600080fd5b50565b612ee481612c19565b8114612eef57600080fd5b5056fea2646970667358221220b9a58e004fbe02e62f912b4e2b442964445dfe47e4f667bf12a32dd6a9bde8ec64736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061023d5760003560e01c80638769fd411161013b578063b390c0ab116100b8578063e0c331e11161007c578063e0c331e1146106cc578063e8a2e827146106e8578063e99583a414610706578063f46eccc414610736578063f83d08ba146107665761023d565b8063b390c0ab14610616578063b866c8a414610632578063c0d655bf14610662578063cca16fa81461067e578063cf309012146106ae5761023d565b806393fd5678116100ff57806393fd56781461057257806395d89b4114610590578063983b2d56146105ae5780639cc7f708146105ca578063af946adc146105fa5761023d565b80638769fd41146104ba5780638856f779146104d65780638da5cb5b1461050657806390dd26271461052457806393e1ea41146105545761023d565b806332424aa3116101c95780635c975abb1161018d5780635c975abb146104005780636a0d343a1461041e5780637ae4841f1461044e57806380f51c121461046c5780638456cb591461049c5761023d565b806332424aa31461036c5780633eaaf86b1461038a5780633f4ba83a146103a857806345ba83e3146103c65780634a2edb08146103e25761023d565b806318160ddd1161021057806318160ddd146102dc5780631b2ef1ca146102fa5780632c983a29146103165780633092afd514610332578063313ce5671461034e5761023d565b806306fdde03146102425780630c68efe3146102605780630d99bd6c1461027c57806313af4035146102ac575b600080fd5b61024a610770565b6040516102579190612959565b60405180910390f35b61027a600480360381019061027591906123e5565b610802565b005b6102966004803603810190610291919061234b565b6108a3565b6040516102a39190612a9b565b60405180910390f35b6102c660048036038101906102c191906122f1565b6108c8565b6040516102d3919061293e565b60405180910390f35b6102e4610925565b6040516102f19190612a9b565b60405180910390f35b610314600480360381019061030f9190612438565b61092f565b005b610330600480360381019061032b9190612532565b610a18565b005b61034c600480360381019061034791906122f1565b610ac9565b005b610356610b63565b6040516103639190612ab6565b60405180910390f35b610374610b6c565b6040516103819190612ab6565b60405180910390f35b610392610b71565b60405161039f9190612a9b565b60405180910390f35b6103b0610b77565b6040516103bd919061293e565b60405180910390f35b6103e060048036038101906103db91906125b2565b610c14565b005b6103ea610d11565b6040516103f79190612908565b60405180910390f35b610408610d85565b604051610415919061293e565b60405180910390f35b61043860048036038101906104339190612438565b610d98565b6040516104459190612a9b565b60405180910390f35b610456610dbd565b6040516104639190612923565b60405180910390f35b610486600480360381019061048191906122f1565b610e31565b604051610493919061293e565b60405180910390f35b6104a4610e51565b6040516104b1919061293e565b60405180910390f35b6104d460048036038101906104cf9190612438565b610eee565b005b6104f060048036038101906104eb91906124cb565b61103e565b6040516104fd919061293e565b60405180910390f35b61050e61118e565b60405161051b91906128c4565b60405180910390f35b61053e60048036038101906105399190612478565b6111b2565b60405161054b919061293e565b60405180910390f35b61055c61125a565b6040516105699190612ab6565b60405180910390f35b61057a611273565b6040516105879190612908565b60405180910390f35b6105986112e7565b6040516105a59190612959565b60405180910390f35b6105c860048036038101906105c391906122f1565b611379565b005b6105e460048036038101906105df91906123b8565b611413565b6040516105f19190612a9b565b60405180910390f35b610614600480360381019061060f919061255f565b611430565b005b610630600480360381019061062b9190612438565b611506565b005b61064c60048036038101906106479190612478565b6115a4565b604051610659919061293e565b60405180910390f35b61067c6004803603810190610677919061255f565b61165b565b005b61069860048036038101906106939190612438565b611731565b6040516106a59190612a9b565b60405180910390f35b6106b6611760565b6040516106c3919061293e565b60405180910390f35b6106e660048036038101906106e191906125b2565b611773565b005b6106f0611870565b6040516106fd9190612923565b60405180910390f35b610720600480360381019061071b91906123b8565b6118e4565b60405161072d9190612a9b565b60405180910390f35b610750600480360381019061074b91906122f1565b6118fc565b60405161075d919061293e565b60405180910390f35b61076e61191c565b005b60606002805461077f90612c59565b80601f01602080910402602001604051908101604052809291908181526020018280546107ab90612c59565b80156107f85780601f106107cd576101008083540402835291602001916107f8565b820191906000526020600020905b8154815290600101906020018083116107db57829003601f168201915b5050505050905090565b61080a611981565b1561084a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084190612a5b565b60405180910390fd5b6108538361199f565b610892576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088990612a1b565b60405180910390fd5b61089d838383611a73565b50505050565b6007602052816000526040600020602052806000526040600020600091509150505481565b60006108d333611b24565b610912576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090990612a1b565b60405180910390fd5b61091b82611b7c565b5060019050919050565b6000600454905090565b610937611981565b15610977576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096e90612a5b565b60405180910390fd5b60011515600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610a0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a01906129fb565b60405180910390fd5b610a148282611bc7565b5050565b610a20611c47565b15610a60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a579061299b565b60405180910390fd5b610a6933611b24565b610aa8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9f90612a1b565b60405180910390fd5b80600a60040160006101000a81548160ff021916908360ff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4e90612a1b565b60405180910390fd5b610b6081611c65565b50565b60006012905090565b601281565b60045481565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610c05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bfc90612a7b565b60405180910390fd5b610c0d611cc0565b6001905090565b610c1c611c47565b15610c5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c539061299b565b60405180910390fd5b610c6533611b24565b610ca4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9b90612a1b565b60405180910390fd5b6040518060c001604052808760ff1660ff1681526020018660ff1660ff1681526020018560ff1660ff1681526020018460ff1660ff1681526020018360ff1660ff1681526020018260ff1660ff16815250600a600201906006610d089291906120f3565b50505050505050565b610d1961218d565b600a600101600380602002604051908101604052809291908260038015610d7b576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411610d445790505b5050505050905090565b600060149054906101000a900460ff1681565b6006602052816000526040600020602052806000526040600020600091509150505481565b610dc56121af565b600a600201600680602002604051908101604052809291908260068015610e27576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411610df05790505b5050505050905090565b60016020528060005260406000206000915054906101000a900460ff1681565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610edf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed6906129db565b60405180910390fd5b610ee7611cdc565b6001905090565b610ef6611981565b15610f36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2d90612a5b565b60405180910390fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054811115610fc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc0906129bb565b60405180910390fd5b610fd38282611cf9565b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060008282546110339190612b9d565b925050819055505050565b6000611048611981565b15611088576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107f90612a5b565b60405180910390fd5b61109185611dce565b6110d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110c790612a1b565b60405180910390fd5b6000859050600060066000878152602001908152602001600020600083815260200190815260200160002054905080841115611141576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113890612a3b565b60405180910390fd5b61114c868686611df0565b83816111589190612b9d565b60066000888152602001908152602001600020600084815260200190815260200160002081905550600192505050949350505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006111bc611981565b156111fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f390612a5b565b60405180910390fd5b61120584611dce565b611244576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123b90612a1b565b60405180910390fd5b61124f848484611df0565b600190509392505050565b600a8060040160009054906101000a900460ff16905081565b61127b61218d565b600a6000016003806020026040519081016040528092919082600380156112dd576020028201916000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116112a65790505b5050505050905090565b6060600380546112f690612c59565b80601f016020809104026020016040519081016040528092919081815260200182805461132290612c59565b801561136f5780601f106113445761010080835404028352916020019161136f565b820191906000526020600020905b81548152906001019060200180831161135257829003601f168201915b5050505050905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611407576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113fe90612a1b565b60405180910390fd5b61141081611e82565b50565b600060056000838152602001908152602001600020549050919050565b611438611c47565b15611478576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146f9061299b565b60405180910390fd5b61148133611b24565b6114c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114b790612a1b565b60405180910390fd5b60405180606001604052808460ff1660ff1681526020018360ff1660ff1681526020018260ff1660ff16815250600a6001019060036115009291906121d1565b50505050565b61150e611981565b1561154e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154590612a5b565b60405180910390fd5b6115578261199f565b611596576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158d90612a1b565b60405180910390fd5b6115a08282611cf9565b5050565b60006115af84611dce565b6115ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115e590612a1b565b60405180910390fd5b816006600086815260200190815260200160002060008581526020019081526020016000208190555082847f08aaf4f7dd1adfa5bfe7067dea5b4ebd7e119d43257438a9189f37d7044eb09a846040516116489190612a9b565b60405180910390a3600190509392505050565b611663611c47565b156116a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169a9061299b565b60405180910390fd5b6116ac33611b24565b6116eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116e290612a1b565b60405180910390fd5b60405180606001604052808460ff1660ff1681526020018360ff1660ff1681526020018260ff1660ff16815250600a60000190600361172b9291906121d1565b50505050565b600060066000848152602001908152602001600020600083815260200190815260200160002054905092915050565b600960009054906101000a900460ff1681565b61177b611c47565b156117bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117b29061299b565b60405180910390fd5b6117c433611b24565b611803576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117fa90612a1b565b60405180910390fd5b6040518060c001604052808760ff1660ff1681526020018660ff1660ff1681526020018560ff1660ff1681526020018460ff1660ff1681526020018360ff1660ff1681526020018260ff1660ff16815250600a6003019060066118679291906120f3565b50505050505050565b6118786121af565b600a6003016006806020026040519081016040528092919082600680156118da576020028201916000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116118a35790505b5050505050905090565b60056020528060005260406000206000915090505481565b60086020528060005260406000206000915054906101000a900460ff1681565b61192533611b24565b611964576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161195b90612a1b565b60405180910390fd5b6001600960006101000a81548160ff021916908315150217905550565b600060011515600060149054906101000a900460ff16151514905090565b60003373ffffffffffffffffffffffffffffffffffffffff1673ce761d788df608bd21bdd59d6f4b54b2e27f25bb73ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b8152600401611a059190612a9b565b60206040518083038186803b158015611a1d57600080fd5b505afa158015611a31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a55919061231e565b73ffffffffffffffffffffffffffffffffffffffff16149050919050565b600081600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff16847f25513def906e48f9e4a3b482e5ff228d356d8dda4744112c24c666c2d270fbeb84604051611b119190612a9b565b60405180910390a3600190509392505050565b60008173ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16149050919050565b6000816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b8060046000828254611bd99190612b47565b9250508190555080600560008481526020019081526020016000206000828254611c039190612b47565b9250508190555081827f070aa035fe0a09f0d9305bdc2d7a5d93cd4733db3b1ff869b4a7033c9501909a83604051611c3b9190612a9b565b60405180910390a35050565b600060011515600960009054906101000a900460ff16151514905090565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008060146101000a81548160ff021916908315150217905550565b6001600060146101000a81548160ff021916908315150217905550565b60006005600084815260200190815260200160002054905081811015611d54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d4b9061297b565b60405180910390fd5b8160046000828254611d669190612b9d565b925050819055508181611d799190612b9d565b600560008581526020019081526020016000208190555082837f5af801e983cfd842de8b0797a2d6077db3ac2dea16571e0c7f5080291ca1b93484604051611dc19190612a9b565b60405180910390a3505050565b6000611dd982611edd565b80611de95750611de88261199f565b5b9050919050565b80600560008581526020019081526020016000206000828254611e139190612b9d565b9250508190555080600560008481526020019081526020016000206000828254611e3d9190612b47565b9250508190555081837faf6151f5085accf2d57e1e7bf7601d3b3982e0de7e9a90f032f8554de9c104f683604051611e759190612a9b565b60405180910390a3505050565b6001600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60003373ffffffffffffffffffffffffffffffffffffffff1673ce761d788df608bd21bdd59d6f4b54b2e27f25bb73ffffffffffffffffffffffffffffffffffffffff1663081812fc846040518263ffffffff1660e01b8152600401611f439190612a9b565b60206040518083038186803b158015611f5b57600080fd5b505afa158015611f6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f93919061231e565b73ffffffffffffffffffffffffffffffffffffffff1614806120ec575073ce761d788df608bd21bdd59d6f4b54b2e27f25bb73ffffffffffffffffffffffffffffffffffffffff1663e985e9c573ce761d788df608bd21bdd59d6f4b54b2e27f25bb73ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b815260040161202d9190612a9b565b60206040518083038186803b15801561204557600080fd5b505afa158015612059573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061207d919061231e565b336040518363ffffffff1660e01b815260040161209b9291906128df565b60206040518083038186803b1580156120b357600080fd5b505afa1580156120c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120eb919061238b565b5b9050919050565b826006601f0160209004810192821561217c5791602002820160005b8382111561214d57835183826101000a81548160ff021916908360ff160217905550926020019260010160208160000104928301926001030261210f565b801561217a5782816101000a81549060ff021916905560010160208160000104928301926001030261214d565b505b509050612189919061226b565b5090565b6040518060600160405280600390602082028036833780820191505090505090565b6040518060c00160405280600690602082028036833780820191505090505090565b826003601f0160209004810192821561225a5791602002820160005b8382111561222b57835183826101000a81548160ff021916908360ff16021790555092602001926001016020816000010492830192600103026121ed565b80156122585782816101000a81549060ff021916905560010160208160000104928301926001030261222b565b505b509050612267919061226b565b5090565b5b8082111561228457600081600090555060010161226c565b5090565b60008135905061229781612e96565b92915050565b6000815190506122ac81612e96565b92915050565b6000815190506122c181612ead565b92915050565b6000813590506122d681612ec4565b92915050565b6000813590506122eb81612edb565b92915050565b60006020828403121561230757612306612ce9565b5b600061231584828501612288565b91505092915050565b60006020828403121561233457612333612ce9565b5b60006123428482850161229d565b91505092915050565b6000806040838503121561236257612361612ce9565b5b600061237085828601612288565b9250506020612381858286016122c7565b9150509250929050565b6000602082840312156123a1576123a0612ce9565b5b60006123af848285016122b2565b91505092915050565b6000602082840312156123ce576123cd612ce9565b5b60006123dc848285016122c7565b91505092915050565b6000806000606084860312156123fe576123fd612ce9565b5b600061240c868287016122c7565b935050602061241d86828701612288565b925050604061242e868287016122c7565b9150509250925092565b6000806040838503121561244f5761244e612ce9565b5b600061245d858286016122c7565b925050602061246e858286016122c7565b9150509250929050565b60008060006060848603121561249157612490612ce9565b5b600061249f868287016122c7565b93505060206124b0868287016122c7565b92505060406124c1868287016122c7565b9150509250925092565b600080600080608085870312156124e5576124e4612ce9565b5b60006124f3878288016122c7565b9450506020612504878288016122c7565b9350506040612515878288016122c7565b9250506060612526878288016122c7565b91505092959194509250565b60006020828403121561254857612547612ce9565b5b6000612556848285016122dc565b91505092915050565b60008060006060848603121561257857612577612ce9565b5b6000612586868287016122dc565b9350506020612597868287016122dc565b92505060406125a8868287016122dc565b9150509250925092565b60008060008060008060c087890312156125cf576125ce612ce9565b5b60006125dd89828a016122dc565b96505060206125ee89828a016122dc565b95505060406125ff89828a016122dc565b945050606061261089828a016122dc565b935050608061262189828a016122dc565b92505060a061263289828a016122dc565b9150509295509295509295565b600061264b83836128a6565b60208301905092915050565b61266081612bd1565b82525050565b61266f81612ae5565b6126798184612b20565b925061268482612ad1565b8060005b838110156126b557815161269c878261263f565b96506126a783612b06565b925050600181019050612688565b505050505050565b6126c681612af0565b6126d08184612b2b565b92506126db82612adb565b8060005b8381101561270c5781516126f3878261263f565b96506126fe83612b13565b9250506001810190506126df565b505050505050565b61271d81612be3565b82525050565b600061272e82612afb565b6127388185612b36565b9350612748818560208601612c26565b61275181612cee565b840191505092915050565b6000612769600f83612b36565b915061277482612cff565b602082019050919050565b600061278c600f83612b36565b915061279782612d28565b602082019050919050565b60006127af600e83612b36565b91506127ba82612d51565b602082019050919050565b60006127d2600c83612b36565b91506127dd82612d7a565b602082019050919050565b60006127f5601283612b36565b915061280082612da3565b602082019050919050565b6000612818600d83612b36565b915061282382612dcc565b602082019050919050565b600061283b602583612b36565b915061284682612df5565b604082019050919050565b600061285e601283612b36565b915061286982612e44565b602082019050919050565b6000612881600e83612b36565b915061288c82612e6d565b602082019050919050565b6128a081612c0f565b82525050565b6128af81612c19565b82525050565b6128be81612c19565b82525050565b60006020820190506128d96000830184612657565b92915050565b60006040820190506128f46000830185612657565b6129016020830184612657565b9392505050565b600060608201905061291d6000830184612666565b92915050565b600060c08201905061293860008301846126bd565b92915050565b60006020820190506129536000830184612714565b92915050565b600060208201905081810360008301526129738184612723565b905092915050565b600060208201905081810360008301526129948161275c565b9050919050565b600060208201905081810360008301526129b48161277f565b9050919050565b600060208201905081810360008301526129d4816127a2565b9050919050565b600060208201905081810360008301526129f4816127c5565b9050919050565b60006020820190508181036000830152612a14816127e8565b9050919050565b60006020820190508181036000830152612a348161280b565b9050919050565b60006020820190508181036000830152612a548161282e565b9050919050565b60006020820190508181036000830152612a7481612851565b9050919050565b60006020820190508181036000830152612a9481612874565b9050919050565b6000602082019050612ab06000830184612897565b92915050565b6000602082019050612acb60008301846128b5565b92915050565b6000819050919050565b6000819050919050565b600060039050919050565b600060069050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b6000612b5282612c0f565b9150612b5d83612c0f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612b9257612b91612c8b565b5b828201905092915050565b6000612ba882612c0f565b9150612bb383612c0f565b925082821015612bc657612bc5612c8b565b5b828203905092915050565b6000612bdc82612bef565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015612c44578082015181840152602081019050612c29565b83811115612c53576000848401525b50505050565b60006002820490506001821680612c7157607f821691505b60208210811415612c8557612c84612cba565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f42616c616e636520746f6f206c6f770000000000000000000000000000000000600082015250565b7f5265736f75726365204c6f636b65640000000000000000000000000000000000600082015250565b7f4275726e203e20417070726f7665000000000000000000000000000000000000600082015250565b7f50617573652064656e6965640000000000000000000000000000000000000000600082015250565b7f4d696e74204163636573732044656e6965640000000000000000000000000000600082015250565b7f4d757374206265206f776e657200000000000000000000000000000000000000600082015250565b7f5472616e7366657220616d6f756e742067726561746572207468616e2061707060008201527f726f76616c000000000000000000000000000000000000000000000000000000602082015250565b7f436f6e7472616374206973207061757365640000000000000000000000000000600082015250565b7f556e70617573652064656e696564000000000000000000000000000000000000600082015250565b612e9f81612bd1565b8114612eaa57600080fd5b50565b612eb681612be3565b8114612ec157600080fd5b50565b612ecd81612c0f565b8114612ed857600080fd5b50565b612ee481612c19565b8114612eef57600080fd5b5056fea2646970667358221220b9a58e004fbe02e62f912b4e2b442964445dfe47e4f667bf12a32dd6a9bde8ec64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2138,
        "contract": "contracts/farms/fruit/Strawberry.sol:Strawberry",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2178,
        "contract": "contracts/farms/fruit/Strawberry.sol:Strawberry",
        "label": "paused",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 2182,
        "contract": "contracts/farms/fruit/Strawberry.sol:Strawberry",
        "label": "pausers",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 2397,
        "contract": "contracts/farms/fruit/Strawberry.sol:Strawberry",
        "label": "_name",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 2399,
        "contract": "contracts/farms/fruit/Strawberry.sol:Strawberry",
        "label": "_symbol",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 2402,
        "contract": "contracts/farms/fruit/Strawberry.sol:Strawberry",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 2409,
        "contract": "contracts/farms/fruit/Strawberry.sol:Strawberry",
        "label": "_balanceOf",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 2415,
        "contract": "contracts/farms/fruit/Strawberry.sol:Strawberry",
        "label": "_transferAllowance",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 705,
        "contract": "contracts/farms/fruit/Strawberry.sol:Strawberry",
        "label": "burnAllowance",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 1767,
        "contract": "contracts/farms/fruit/Strawberry.sol:Strawberry",
        "label": "minters",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1747,
        "contract": "contracts/farms/fruit/Strawberry.sol:Strawberry",
        "label": "locked",
        "offset": 0,
        "slot": "9",
        "type": "t_bool"
      },
      {
        "astId": 2980,
        "contract": "contracts/farms/fruit/Strawberry.sol:Strawberry",
        "label": "attributes",
        "offset": 0,
        "slot": "10",
        "type": "t_struct(ResourceAttributes)2977_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint8)3_storage": {
        "base": "t_uint8",
        "encoding": "inplace",
        "label": "uint8[3]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint8)6_storage": {
        "base": "t_uint8",
        "encoding": "inplace",
        "label": "uint8[6]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(ResourceAttributes)2977_storage": {
        "encoding": "inplace",
        "label": "struct Resource.ResourceAttributes",
        "members": [
          {
            "astId": 2962,
            "contract": "contracts/farms/fruit/Strawberry.sol:Strawberry",
            "label": "pointIncreasers",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint8)3_storage"
          },
          {
            "astId": 2966,
            "contract": "contracts/farms/fruit/Strawberry.sol:Strawberry",
            "label": "pointDecreasers",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint8)3_storage"
          },
          {
            "astId": 2970,
            "contract": "contracts/farms/fruit/Strawberry.sol:Strawberry",
            "label": "abilityIncreasers",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint8)6_storage"
          },
          {
            "astId": 2974,
            "contract": "contracts/farms/fruit/Strawberry.sol:Strawberry",
            "label": "abilityDecreasers",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint8)6_storage"
          },
          {
            "astId": 2976,
            "contract": "contracts/farms/fruit/Strawberry.sol:Strawberry",
            "label": "weight",
            "offset": 0,
            "slot": "4",
            "type": "t_uint8"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}