{
  "address": "0x1429859428C0aBc9C2C47C8Ee9FBaf82cFA0F20f",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_corn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wheat",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_beans",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_barley",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_summoner",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_crop",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_yield",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_roll",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_level",
          "type": "uint256"
        }
      ],
      "name": "FarmResource",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "barley",
      "outputs": [
        {
          "internalType": "contract ICrop",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beans",
      "outputs": [
        {
          "internalType": "contract ICrop",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clearDisaster",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "corn",
      "outputs": [
        {
          "internalType": "contract ICrop",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disaster",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "summoner",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "resource",
          "type": "uint8"
        }
      ],
      "name": "farm",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "summoner",
          "type": "uint256"
        }
      ],
      "name": "farmBarley",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "summoner",
          "type": "uint256"
        }
      ],
      "name": "farmBeans",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "summoner",
          "type": "uint256"
        }
      ],
      "name": "farmCorn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "summoner",
          "type": "uint256"
        }
      ],
      "name": "farmWheat",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pausers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "removePauser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_yield",
          "type": "uint256"
        }
      ],
      "name": "setDisaster",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_yield",
          "type": "uint256"
        }
      ],
      "name": "setYield",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "base",
          "type": "uint32"
        }
      ],
      "name": "setYieldBase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wheat",
      "outputs": [
        {
          "internalType": "contract ICrop",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "yield",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "yieldBase",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "yieldMultiplier",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xab34ac872d18d34d341f1ce52fc385fc4ebae71b4a543bbf57e8e5546e05142a",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x1429859428C0aBc9C2C47C8Ee9FBaf82cFA0F20f",
    "transactionIndex": 0,
    "gasUsed": "1856325",
    "logsBloom": "0x
    "blockHash": "0x2a6aaa51f71f1f6df6179bdf8cd4f32fc2c34b26a844b1f7fb34ba19d0e162cd",
    "transactionHash": "0xab34ac872d18d34d341f1ce52fc385fc4ebae71b4a543bbf57e8e5546e05142a",
    "logs": [],
    "blockNumber": 19023333,
    "cumulativeGasUsed": "1856325",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x7bc06c482DEAd17c0e297aFbC32f6e63d3846650",
    "0xc351628EB244ec633d5f21fBD6621e1a683B1181",
    "0xcbEAF3BDe82155F56486Fb5a1072cb8baAf547cc",
    "0xFD471836031dc5108809D173A067e8486B9047A3"
  ],
  "solcInputHash": "0646f8583f9c8fa3488c002332d9bd8c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_corn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wheat\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_beans\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_barley\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_summoner\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_crop\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_yield\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_roll\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"FarmResource\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"barley\",\"outputs\":[{\"internalType\":\"contract ICrop\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beans\",\"outputs\":[{\"internalType\":\"contract ICrop\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearDisaster\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"corn\",\"outputs\":[{\"internalType\":\"contract ICrop\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disaster\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"summoner\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"resource\",\"type\":\"uint8\"}],\"name\":\"farm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"summoner\",\"type\":\"uint256\"}],\"name\":\"farmBarley\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"summoner\",\"type\":\"uint256\"}],\"name\":\"farmBeans\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"summoner\",\"type\":\"uint256\"}],\"name\":\"farmCorn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"summoner\",\"type\":\"uint256\"}],\"name\":\"farmWheat\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pausers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"removePauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_yield\",\"type\":\"uint256\"}],\"name\":\"setDisaster\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_yield\",\"type\":\"uint256\"}],\"name\":\"setYield\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"base\",\"type\":\"uint32\"}],\"name\":\"setYieldBase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wheat\",\"outputs\":[{\"internalType\":\"contract ICrop\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yield\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yieldBase\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yieldMultiplier\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/farms/Beginner.sol\":\"BeginnerFarm\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/abstracts/Farm.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"./Rarity.sol\\\";\\nimport \\\"./Ownable.sol\\\";\\nimport \\\"./Pausable.sol\\\";\\n\\ninterface ICrop {\\n  function mint(uint256 summoner, uint256 amount) external;\\n}\\n\\nabstract contract Farm is Rarity, Ownable, Pausable {\\n  uint256 public yield;\\n  uint32 public yieldBase;\\n  address public disaster;\\n\\n  event FarmResource(\\n    uint256 indexed _summoner,\\n    address _crop,\\n    uint256 _amount,\\n    uint256 _yield,\\n    uint256 _roll,\\n    uint256 _level\\n  );\\n\\n  constructor() Rarity() Ownable() {\\n    yield = 0;\\n    yieldBase = 5000;\\n    disaster = address(0);\\n  }\\n\\n  function setOwner(address _owner) external returns (bool) {\\n    require(owner == msg.sender, \\\"Must be owner\\\");\\n    _setOwner(_owner);\\n    return true;\\n  }\\n\\n  function _farm(uint256 _summoner, ICrop _crop) internal {\\n    require(_isPaused() == false, \\\"Farm not available\\\");\\n    _getRarity().adventure(_summoner);\\n    uint256[4] memory _stats = _getSummoner(_summoner);\\n    uint32 _multiplier = _yieldMultiplier();\\n    uint64 _amount = _multiplier * 1e18;\\n    _crop.mint(_summoner, _amount);\\n    uint256 _roll = _getRarityRandom().d20(_summoner);\\n    uint256 _yield = _roll * _stats[3];\\n    yield = yield + _yield;\\n    emit FarmResource(\\n      _summoner,\\n      address(_crop),\\n      _amount,\\n      _yield,\\n      _roll,\\n      _stats[3]\\n    );\\n  }\\n\\n  function yieldMultiplier() external view returns (uint32) {\\n    return _yieldMultiplier();\\n  }\\n\\n  function _yieldMultiplier() internal view returns (uint32) {\\n    if (yield < yieldBase) {\\n      return 1;\\n    } else if (yield < yieldBase * 2) {\\n      return 2;\\n    } else if (yield < yieldBase * 3) {\\n      return 3;\\n    } else if (yield < yieldBase * 4) {\\n      return 4;\\n    } else {\\n      return 5;\\n    }\\n  }\\n\\n  function setYieldBase(uint32 base) external {\\n    require(_isOwner(msg.sender), \\\"Must be owner\\\");\\n    yieldBase = base;\\n  }\\n\\n  function setYield(uint256 _yield) external {\\n    require(_isOwner(msg.sender), \\\"Must be owner\\\");\\n    yield = _yield;\\n  }\\n\\n  function setDisaster(address _addr, uint256 _yield) external {\\n    require(_isOwner(msg.sender), \\\"Must be owner\\\");\\n    _addPauser(_addr);\\n    disaster = _addr;\\n    yield = _yield;\\n    _pause();\\n  }\\n\\n  function clearDisaster() external {\\n    require(\\n      _isOwner(msg.sender) || _isDisaster(msg.sender),\\n      \\\"Must be owner or disaster\\\"\\n    );\\n    _removePauser(disaster);\\n    disaster = address(0);\\n    _unpause();\\n  }\\n\\n  function _isDisaster(address _addr) internal view returns (bool) {\\n    return disaster == _addr;\\n  }\\n}\\n\",\"keccak256\":\"0x52099aba00dffeea2c18eff839de9ab26c0deb7f0a7a267a53804f1262026309\",\"license\":\"MIT\"},\"contracts/abstracts/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nabstract contract Ownable {\\n  address public owner;\\n\\n  constructor() {\\n    owner = msg.sender;\\n  }\\n\\n  function _isOwner(address addr) internal view returns (bool) {\\n    return owner == addr;\\n  }\\n\\n  function _setOwner(address addr) internal returns (bool) {\\n    owner = addr;\\n    return true;\\n  }\\n}\\n\",\"keccak256\":\"0xc4263a694a12743fea22f2eaae9094cc65e79204898548d8fc8916231dcf86bd\",\"license\":\"MIT\"},\"contracts/abstracts/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nabstract contract Pausable {\\n  bool public paused;\\n  mapping(address => bool) public pausers;\\n\\n  constructor() {\\n    paused = false;\\n    pausers[msg.sender] = true;\\n  }\\n\\n  function _isPaused() internal view returns (bool) {\\n    return paused == true;\\n  }\\n\\n  function pause() external returns (bool) {\\n    require(pausers[msg.sender], \\\"Pause denied\\\");\\n    _pause();\\n    return true;\\n  }\\n\\n  function unpause() external returns (bool) {\\n    require(pausers[msg.sender], \\\"Unpause denied\\\");\\n    _unpause();\\n    return true;\\n  }\\n\\n  function _addPauser(address addr) internal returns (bool) {\\n    pausers[addr] = true;\\n    return true;\\n  }\\n\\n  function _removePauser(address addr) internal returns (bool) {\\n    pausers[addr] = false;\\n    return true;\\n  }\\n\\n  function _pause() internal {\\n    paused = true;\\n  }\\n\\n  function _unpause() internal {\\n    paused = false;\\n  }\\n}\\n\",\"keccak256\":\"0x97aa1cffaa62bf33d2d70b57e516c689c9cba0c0a6af2ea3c8662f04d4c85bb6\",\"license\":\"MIT\"},\"contracts/abstracts/Rarity.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ninterface IRarity {\\n  function level(uint256) external view returns (uint256);\\n\\n  function getApproved(uint256) external view returns (address);\\n\\n  function isApprovedForAll(address owner, address operator)\\n    external\\n    view\\n    returns (bool);\\n\\n  function ownerOf(uint256) external view returns (address);\\n\\n  function summoner(uint256)\\n    external\\n    view\\n    returns (\\n      uint256,\\n      uint256,\\n      uint256,\\n      uint256\\n    );\\n\\n  function adventure(uint256) external;\\n}\\n\\ninterface IRarityAttributes {\\n  function ability_scores(uint256)\\n    external\\n    view\\n    returns (\\n      uint32,\\n      uint32,\\n      uint32,\\n      uint32,\\n      uint32,\\n      uint32\\n    );\\n}\\n\\ninterface IRarityRandomCodex {\\n  function d20(uint256) external view returns (uint256);\\n}\\n\\nabstract contract Rarity {\\n  IRarity constant _rm = IRarity(0xce761D788DF608BD21bdd59d6f4B54b2e27F25Bb);\\n  IRarityAttributes constant _attr =\\n    IRarityAttributes(0xB5F5AF1087A8DA62A23b08C00C6ec9af21F397a1);\\n  IRarityRandomCodex constant _random =\\n    IRarityRandomCodex(0x7426dBE5207C2b5DaC57d8e55F0959fcD99661D4);\\n\\n  constructor() {}\\n\\n  function _isRarityOwner(uint256 _summoner) internal view returns (bool) {\\n    return _rm.ownerOf(_summoner) == msg.sender;\\n  }\\n\\n  function _isRarityApproved(uint256 _summoner) internal view returns (bool) {\\n    return\\n      _rm.getApproved(_summoner) == msg.sender ||\\n      _rm.isApprovedForAll(_rm.ownerOf(_summoner), msg.sender);\\n  }\\n\\n  function _isRarityApprovedOrOwner(uint256 _summoner)\\n    internal\\n    view\\n    returns (bool)\\n  {\\n    return _isRarityApproved(_summoner) || _isRarityOwner(_summoner);\\n  }\\n\\n  function _getRarity() internal pure returns (IRarity) {\\n    return _rm;\\n  }\\n\\n  function _getRarityAttributes() internal pure returns (IRarityAttributes) {\\n    return _attr;\\n  }\\n\\n  function _getRarityRandom() internal pure returns (IRarityRandomCodex) {\\n    return _random;\\n  }\\n\\n  function _getSummonerAttributes(uint256 _summoner)\\n    internal\\n    view\\n    returns (uint32[6] memory)\\n  {\\n    (\\n      uint32 _str,\\n      uint32 _dex,\\n      uint32 _con,\\n      uint32 _int,\\n      uint32 _wis,\\n      uint32 _cha\\n    ) = _attr.ability_scores(_summoner);\\n    uint32[6] memory scores = [_str, _dex, _con, _int, _wis, _cha];\\n    return scores;\\n  }\\n\\n  function _getSummoner(uint256 _summoner)\\n    internal\\n    view\\n    returns (uint256[4] memory)\\n  {\\n    (uint256 _xp, uint256 _log, uint256 _class, uint256 _level) = _rm.summoner(\\n      _summoner\\n    );\\n    uint256[4] memory result = [_xp, _log, _class, _level];\\n    return result;\\n  }\\n}\\n\",\"keccak256\":\"0x3bbc694ec9e23e448ca912f2bd9510c567a2e69e582725f6b02e9e617b35f405\",\"license\":\"MIT\"},\"contracts/farms/Beginner.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"../abstracts/Farm.sol\\\";\\n\\ncontract BeginnerFarm is Farm {\\n  string public constant name = \\\"RarityFarms\\\";\\n  string public constant symbol = \\\"BFARM\\\";\\n\\n  ICrop public corn;\\n  ICrop public wheat;\\n  ICrop public beans;\\n  ICrop public barley;\\n\\n  // Events\\n\\n  constructor(\\n    address _corn,\\n    address _wheat,\\n    address _beans,\\n    address _barley\\n  ) Farm() {\\n    corn = ICrop(_corn);\\n    wheat = ICrop(_wheat);\\n    beans = ICrop(_beans);\\n    barley = ICrop(_barley);\\n\\n    yieldBase = 5000;\\n  }\\n\\n  function farm(uint256 summoner, uint8 resource) external {\\n    require(resource > 0 && resource < 5, \\\"Invalid Resource\\\");\\n    if (resource == 1) {\\n      _farm(summoner, corn);\\n    } else if (resource == 2) {\\n      _farm(summoner, wheat);\\n    } else if (resource == 3) {\\n      _farm(summoner, beans);\\n    } else if (resource == 4) {\\n      _farm(summoner, barley);\\n    }\\n  }\\n\\n  function farmCorn(uint256 summoner) external {\\n    _farm(summoner, corn);\\n  }\\n\\n  function farmWheat(uint256 summoner) external {\\n    _farm(summoner, wheat);\\n  }\\n\\n  function farmBeans(uint256 summoner) external {\\n    _farm(summoner, beans);\\n  }\\n\\n  function farmBarley(uint256 summoner) external {\\n    _farm(summoner, barley);\\n  }\\n\\n  function addPauser(address addr) external {\\n    require(_isOwner(msg.sender), \\\"Must be owner\\\");\\n    _addPauser(addr);\\n  }\\n\\n  function removePauser(address addr) external {\\n    require(_isOwner(msg.sender), \\\"Must be owner\\\");\\n    _removePauser(addr);\\n  }\\n}\\n\",\"keccak256\":\"0x5c9515538660ae5de48f118568de3b0251784b6e348f34932a022e59b689612e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101a95760003560e01c806380f51c12116100f9578063bad6a14e11610097578063d939766a11610071578063d939766a14610460578063e42da3b41461047e578063f516c2971461049a578063fe86673c146104b6576101a9565b8063bad6a14e1461040a578063cf4613c514610426578063d27e364514610442576101a9565b80638da5cb5b116100d35780638da5cb5b1461039257806392c8c45e146103b057806395d89b41146103ce578063a9300b1e146103ec576101a9565b806380f51c121461032857806382dc1ec4146103585780638456cb5914610374576101a9565b80633f4ba83a116101665780636240f0f4116101405780636240f0f4146102ca5780636b2c0f55146102d457806375e3a9d9146102f05780637649dce51461030c576101a9565b80633f4ba83a14610272578063439e8cbf146102905780635c975abb146102ac576101a9565b806306fdde03146101ae5780630c923d83146101cc5780630e357738146101ea57806313af4035146102085780631efbd51a146102385780632859398414610254575b600080fd5b6101b66104d4565b6040516101c3919061181b565b60405180910390f35b6101d461050d565b6040516101e19190611777565b60405180910390f35b6101f2610533565b6040516101ff9190611800565b60405180910390f35b610222600480360381019061021d9190611477565b610559565b60405161022f91906117e5565b60405180910390f35b610252600480360381019061024d91906114e4565b6105fc565b005b61025c61062b565b60405161026991906118fd565b60405180910390f35b61027a610631565b60405161028791906117e5565b60405180910390f35b6102aa60048036038101906102a591906114a4565b6106ce565b005b6102b4610774565b6040516102c191906117e5565b60405180910390f35b6102d2610787565b005b6102ee60048036038101906102e99190611477565b610857565b005b61030a600480360381019061030591906115e5565b6108ac565b005b610326600480360381019061032191906114e4565b610918565b005b610342600480360381019061033d9190611477565b610947565b60405161034f91906117e5565b60405180910390f35b610372600480360381019061036d9190611477565b610967565b005b61037c6109bc565b60405161038991906117e5565b60405180910390f35b61039a610a59565b6040516103a79190611777565b60405180910390f35b6103b8610a7d565b6040516103c59190611800565b60405180910390f35b6103d6610aa3565b6040516103e3919061181b565b60405180910390f35b6103f4610adc565b6040516104019190611800565b60405180910390f35b610424600480360381019061041f91906115a5565b610b02565b005b610440600480360381019061043b91906114e4565b610c4e565b005b61044a610c7d565b6040516104579190611941565b60405180910390f35b610468610c8c565b6040516104759190611941565b60405180910390f35b610498600480360381019061049391906114e4565b610ca2565b005b6104b460048036038101906104af91906114e4565b610cf4565b005b6104be610d23565b6040516104cb9190611800565b60405180910390f35b6040518060400160405280600b81526020017f5261726974794661726d7300000000000000000000000000000000000000000081525081565b600360049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e09061189d565b60405180910390fd5b6105f282610d49565b5060019050919050565b61062881600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610d94565b50565b60025481565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166106bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b6906118dd565b60405180910390fd5b6106c7611029565b6001905090565b6106d733611045565b610716576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070d9061189d565b60405180910390fd5b61071f8261109d565b5081600360046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806002819055506107706110ff565b5050565b600060149054906101000a900460ff1681565b61079033611045565b806107a0575061079f3361111c565b5b6107df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d69061183d565b60405180910390fd5b61080a600360049054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611176565b506000600360046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610855611029565b565b61086033611045565b61089f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108969061189d565b60405180910390fd5b6108a881611176565b5050565b6108b533611045565b6108f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108eb9061189d565b60405180910390fd5b80600360006101000a81548163ffffffff021916908363ffffffff16021790555050565b61094481600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610d94565b50565b60016020528060005260406000206000915054906101000a900460ff1681565b61097033611045565b6109af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a69061189d565b60405180910390fd5b6109b88161109d565b5050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610a4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a419061187d565b60405180910390fd5b610a526110ff565b6001905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600581526020017f424641524d00000000000000000000000000000000000000000000000000000081525081565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008160ff16118015610b18575060058160ff16105b610b57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4e9061185d565b60405180910390fd5b60018160ff161415610b9457610b8f82600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610d94565b610c4a565b60028160ff161415610bd157610bcc82600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610d94565b610c49565b60038160ff161415610c0e57610c0982600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610d94565b610c48565b60048160ff161415610c4757610c4682600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610d94565b5b5b5b5b5050565b610c7a81600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610d94565b50565b6000610c876111d8565b905090565b600360009054906101000a900463ffffffff1681565b610cab33611045565b610cea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce19061189d565b60405180910390fd5b8060028190555050565b610d2081600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610d94565b50565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b60001515610da06112b1565b151514610de2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd9906118bd565b60405180910390fd5b610dea6112cf565b73ffffffffffffffffffffffffffffffffffffffff1663b00b52f1836040518263ffffffff1660e01b8152600401610e2291906118fd565b600060405180830381600087803b158015610e3c57600080fd5b505af1158015610e50573d6000803e3d6000fd5b505050506000610e5f836112eb565b90506000610e6b6111d8565b90506000670de0b6b3a76400008263ffffffff16610e899190611a66565b90508373ffffffffffffffffffffffffffffffffffffffff16631b2ef1ca86836040518363ffffffff1660e01b8152600401610ec6929190611918565b600060405180830381600087803b158015610ee057600080fd5b505af1158015610ef4573d6000803e3d6000fd5b505050506000610f026113d0565b73ffffffffffffffffffffffffffffffffffffffff1663438303bf876040518263ffffffff1660e01b8152600401610f3a91906118fd565b60206040518083038186803b158015610f5257600080fd5b505afa158015610f66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8a9190611511565b9050600084600360048110610fa257610fa1611bcb565b5b602002015182610fb291906119ce565b905080600254610fc29190611978565b600281905550867fe17b1776f98c77342771b090a62391a40d4f110d57e0e31a54cbd51abb6190d3878584868a60036004811061100257611001611bcb565b5b6020020151604051611018959493929190611792565b60405180910390a250505050505050565b60008060146101000a81548160ff021916908315150217905550565b60008173ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16149050919050565b600060018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060019050919050565b6001600060146101000a81548160ff021916908315150217905550565b60008173ffffffffffffffffffffffffffffffffffffffff16600360049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16149050919050565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060019050919050565b6000600360009054906101000a900463ffffffff1663ffffffff16600254101561120557600190506112ae565b6002600360009054906101000a900463ffffffff166112249190611a28565b63ffffffff16600254101561123c57600290506112ae565b60038060009054906101000a900463ffffffff1661125a9190611a28565b63ffffffff16600254101561127257600390506112ae565b6004600360009054906101000a900463ffffffff166112919190611a28565b63ffffffff1660025410156112a957600490506112ae565b600590505b90565b600060011515600060149054906101000a900460ff16151514905090565b600073ce761d788df608bd21bdd59d6f4b54b2e27f25bb905090565b6112f36113ec565b60008060008073ce761d788df608bd21bdd59d6f4b54b2e27f25bb73ffffffffffffffffffffffffffffffffffffffff1663c363b9eb876040518263ffffffff1660e01b815260040161134691906118fd565b60806040518083038186803b15801561135e57600080fd5b505afa158015611372573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611396919061153e565b9350935093509350600060405180608001604052808681526020018581526020018481526020018381525090508095505050505050919050565b6000737426dbe5207c2b5dac57d8e55f0959fcd99661d4905090565b6040518060800160405280600490602082028036833780820191505090505090565b60008135905061141d81611d06565b92915050565b60008135905061143281611d1d565b92915050565b60008151905061144781611d1d565b92915050565b60008135905061145c81611d34565b92915050565b60008135905061147181611d4b565b92915050565b60006020828403121561148d5761148c611bfa565b5b600061149b8482850161140e565b91505092915050565b600080604083850312156114bb576114ba611bfa565b5b60006114c98582860161140e565b92505060206114da85828601611423565b9150509250929050565b6000602082840312156114fa576114f9611bfa565b5b600061150884828501611423565b91505092915050565b60006020828403121561152757611526611bfa565b5b600061153584828501611438565b91505092915050565b6000806000806080858703121561155857611557611bfa565b5b600061156687828801611438565b945050602061157787828801611438565b935050604061158887828801611438565b925050606061159987828801611438565b91505092959194509250565b600080604083850312156115bc576115bb611bfa565b5b60006115ca85828601611423565b92505060206115db85828601611462565b9150509250929050565b6000602082840312156115fb576115fa611bfa565b5b60006116098482850161144d565b91505092915050565b61161b81611aa8565b82525050565b61162a81611aba565b82525050565b61163981611b21565b82525050565b600061164a8261195c565b6116548185611967565b9350611664818560208601611b69565b61166d81611bff565b840191505092915050565b6000611685601983611967565b915061169082611c10565b602082019050919050565b60006116a8601083611967565b91506116b382611c39565b602082019050919050565b60006116cb600c83611967565b91506116d682611c62565b602082019050919050565b60006116ee600d83611967565b91506116f982611c8b565b602082019050919050565b6000611711601283611967565b915061171c82611cb4565b602082019050919050565b6000611734600e83611967565b915061173f82611cdd565b602082019050919050565b61175381611ae6565b82525050565b61176281611af0565b82525050565b61177181611b57565b82525050565b600060208201905061178c6000830184611612565b92915050565b600060a0820190506117a76000830188611612565b6117b46020830187611768565b6117c1604083018661174a565b6117ce606083018561174a565b6117db608083018461174a565b9695505050505050565b60006020820190506117fa6000830184611621565b92915050565b60006020820190506118156000830184611630565b92915050565b60006020820190508181036000830152611835818461163f565b905092915050565b6000602082019050818103600083015261185681611678565b9050919050565b600060208201905081810360008301526118768161169b565b9050919050565b60006020820190508181036000830152611896816116be565b9050919050565b600060208201905081810360008301526118b6816116e1565b9050919050565b600060208201905081810360008301526118d681611704565b9050919050565b600060208201905081810360008301526118f681611727565b9050919050565b6000602082019050611912600083018461174a565b92915050565b600060408201905061192d600083018561174a565b61193a6020830184611768565b9392505050565b60006020820190506119566000830184611759565b92915050565b600081519050919050565b600082825260208201905092915050565b600061198382611ae6565b915061198e83611ae6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156119c3576119c2611b9c565b5b828201905092915050565b60006119d982611ae6565b91506119e483611ae6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611a1d57611a1c611b9c565b5b828202905092915050565b6000611a3382611af0565b9150611a3e83611af0565b92508163ffffffff0483118215151615611a5b57611a5a611b9c565b5b828202905092915050565b6000611a7182611b00565b9150611a7c83611b00565b92508167ffffffffffffffff0483118215151615611a9d57611a9c611b9c565b5b828202905092915050565b6000611ab382611ac6565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600060ff82169050919050565b6000611b2c82611b33565b9050919050565b6000611b3e82611b45565b9050919050565b6000611b5082611ac6565b9050919050565b6000611b6282611b00565b9050919050565b60005b83811015611b87578082015181840152602081019050611b6c565b83811115611b96576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4d757374206265206f776e6572206f7220646973617374657200000000000000600082015250565b7f496e76616c6964205265736f7572636500000000000000000000000000000000600082015250565b7f50617573652064656e6965640000000000000000000000000000000000000000600082015250565b7f4d757374206265206f776e657200000000000000000000000000000000000000600082015250565b7f4661726d206e6f7420617661696c61626c650000000000000000000000000000600082015250565b7f556e70617573652064656e696564000000000000000000000000000000000000600082015250565b611d0f81611aa8565b8114611d1a57600080fd5b50565b611d2681611ae6565b8114611d3157600080fd5b50565b611d3d81611af0565b8114611d4857600080fd5b50565b611d5481611b14565b8114611d5f57600080fd5b5056fea264697066735822122084234162906134eabc8bb0148aafe4a8b0538dcd2b5cf36f89ec91002e57334664736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2138,
        "contract": "contracts/farms/Beginner.sol:BeginnerFarm",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2178,
        "contract": "contracts/farms/Beginner.sol:BeginnerFarm",
        "label": "paused",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 2182,
        "contract": "contracts/farms/Beginner.sol:BeginnerFarm",
        "label": "pausers",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1339,
        "contract": "contracts/farms/Beginner.sol:BeginnerFarm",
        "label": "yield",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 1341,
        "contract": "contracts/farms/Beginner.sol:BeginnerFarm",
        "label": "yieldBase",
        "offset": 0,
        "slot": "3",
        "type": "t_uint32"
      },
      {
        "astId": 1343,
        "contract": "contracts/farms/Beginner.sol:BeginnerFarm",
        "label": "disaster",
        "offset": 4,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 3680,
        "contract": "contracts/farms/Beginner.sol:BeginnerFarm",
        "label": "corn",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(ICrop)1331"
      },
      {
        "astId": 3683,
        "contract": "contracts/farms/Beginner.sol:BeginnerFarm",
        "label": "wheat",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(ICrop)1331"
      },
      {
        "astId": 3686,
        "contract": "contracts/farms/Beginner.sol:BeginnerFarm",
        "label": "beans",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(ICrop)1331"
      },
      {
        "astId": 3689,
        "contract": "contracts/farms/Beginner.sol:BeginnerFarm",
        "label": "barley",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(ICrop)1331"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(ICrop)1331": {
        "encoding": "inplace",
        "label": "contract ICrop",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}