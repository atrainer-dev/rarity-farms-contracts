{
  "address": "0x5081a39b8A5f0E35a8D959395a630b68B74Dd30f",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BurnApproval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_decreaseAbility",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_increaseAbility",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_transferAllowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "owner",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "spender",
          "type": "uint256"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "spender",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "owner",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "summoner",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "burnAllowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "summoner",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "burner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "summoner",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDecreasers",
      "outputs": [
        {
          "internalType": "uint8[6]",
          "name": "",
          "type": "uint8[6]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getIncreasers",
      "outputs": [
        {
          "internalType": "uint8[6]",
          "name": "",
          "type": "uint8[6]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "summoner",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "minters",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pausers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "removeMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "executor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x53eed29161665cc9e5263314c8e7f39f41fb9277254a1f5f99cfe7bb39a8c068",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5081a39b8A5f0E35a8D959395a630b68B74Dd30f",
    "transactionIndex": 0,
    "gasUsed": "2186179",
    "logsBloom": "0x
    "blockHash": "0x21614a39e931dbd7d72007cd398bad9805f561e55c3d64cf294cdac04bf3bca5",
    "transactionHash": "0x53eed29161665cc9e5263314c8e7f39f41fb9277254a1f5f99cfe7bb39a8c068",
    "logs": [],
    "blockNumber": 18412290,
    "cumulativeGasUsed": "2186179",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "8c9374b65a622a2cb9f21ac50deb981f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BurnApproval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_decreaseAbility\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_increaseAbility\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_transferAllowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"owner\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spender\",\"type\":\"uint256\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spender\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"owner\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"summoner\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"burnAllowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"summoner\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"summoner\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDecreasers\",\"outputs\":[{\"internalType\":\"uint8[6]\",\"name\":\"\",\"type\":\"uint8[6]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIncreasers\",\"outputs\":[{\"internalType\":\"uint8[6]\",\"name\":\"\",\"type\":\"uint8[6]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"summoner\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pausers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"removeMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"executor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mill/Flour.sol\":\"Flour\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/abstracts/AbilityModifier.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nabstract contract AbilityModifier {\\n  uint8[6] public _increaseAbility;\\n  uint8[6] public _decreaseAbility;\\n\\n  function getIncreasers() external view returns (uint8[6] memory) {\\n    return _increaseAbility;\\n  }\\n\\n  function getDecreasers() external view returns (uint8[6] memory) {\\n    return _decreaseAbility;\\n  }\\n}\\n\",\"keccak256\":\"0xec9233ee891d4586e0ae2e890d833f5264c0243f379225459dbfca4e152605b2\",\"license\":\"MIT\"},\"contracts/abstracts/Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"./RERC20.sol\\\";\\n\\nabstract contract RarityBurnable is RERC20 {\\n  mapping(address => mapping(uint256 => uint256)) public burnAllowance;\\n\\n  event Burn(uint256 indexed from, uint256 indexed to, uint256 amount);\\n  event BurnApproval(uint256 indexed from, address indexed to, uint256 amount);\\n\\n  function _burnApprove(\\n    uint256 from,\\n    address burner,\\n    uint256 amount\\n  ) internal returns (bool) {\\n    burnAllowance[burner][from] = amount;\\n    emit BurnApproval(from, burner, amount);\\n    return true;\\n  }\\n\\n  function _burn(uint256 dst, uint256 amount) internal {\\n    uint256 balance = _balanceOf[dst];\\n    require(balance >= amount, \\\"Balance too low\\\");\\n    _totalSupply -= amount;\\n    _balanceOf[dst] = balance - amount;\\n    emit Burn(dst, dst, amount);\\n  }\\n}\\n\",\"keccak256\":\"0x1a0aecb65c3686fde978a8af5fed838712037c9b8dbda091787c315451a4c749\",\"license\":\"MIT\"},\"contracts/abstracts/Mintable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"./RERC20.sol\\\";\\n\\nabstract contract RarityMintable is RERC20 {\\n  mapping(address => bool) public minters;\\n\\n  event Mint(uint256 indexed from, uint256 indexed to, uint256 amount);\\n\\n  function _mint(uint256 dst, uint256 amount) internal {\\n    _totalSupply += amount;\\n    _balanceOf[dst] += amount;\\n    emit Mint(dst, dst, amount);\\n  }\\n\\n  function _addMinter(address minter) internal {\\n    minters[minter] = true;\\n  }\\n\\n  function _removeMinter(address minter) internal {\\n    minters[minter] = false;\\n  }\\n}\\n\",\"keccak256\":\"0x319f2f4886cfeea3a731f104f49490d9d1101971f26c1f7a838aad42f2d249d3\",\"license\":\"MIT\"},\"contracts/abstracts/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nabstract contract Ownable {\\n  address public owner;\\n\\n  constructor() {\\n    owner = msg.sender;\\n  }\\n\\n  function _isOwner(address addr) internal view returns (bool) {\\n    return owner == addr;\\n  }\\n\\n  function _setOwner(address addr) internal returns (bool) {\\n    owner = addr;\\n    return true;\\n  }\\n}\\n\",\"keccak256\":\"0xc4263a694a12743fea22f2eaae9094cc65e79204898548d8fc8916231dcf86bd\",\"license\":\"MIT\"},\"contracts/abstracts/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nabstract contract Pausable {\\n  bool public paused;\\n  mapping(address => bool) public pausers;\\n\\n  constructor() {\\n    paused = false;\\n    pausers[msg.sender] = true;\\n  }\\n\\n  function _isPaused() internal view returns (bool) {\\n    return paused == true;\\n  }\\n\\n  function pause() external returns (bool) {\\n    require(pausers[msg.sender], \\\"Pause denied\\\");\\n    _pause();\\n    return true;\\n  }\\n\\n  function unpause() external returns (bool) {\\n    require(pausers[msg.sender], \\\"Unpause denied\\\");\\n    _unpause();\\n    return true;\\n  }\\n\\n  function _addPauser(address addr) internal returns (bool) {\\n    pausers[addr] = true;\\n    return true;\\n  }\\n\\n  function _removePauser(address addr) internal returns (bool) {\\n    pausers[addr] = false;\\n    return true;\\n  }\\n\\n  function _pause() internal {\\n    paused = true;\\n  }\\n\\n  function _unpause() internal {\\n    paused = false;\\n  }\\n}\\n\",\"keccak256\":\"0x97aa1cffaa62bf33d2d70b57e516c689c9cba0c0a6af2ea3c8662f04d4c85bb6\",\"license\":\"MIT\"},\"contracts/abstracts/RERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"./Rarity.sol\\\";\\nimport \\\"./Ownable.sol\\\";\\nimport \\\"./Pausable.sol\\\";\\n\\ninterface IRarityFungible {\\n  event Transfer(uint256 indexed from, uint256 indexed to, uint256 amount);\\n  event Approval(uint256 indexed from, uint256 indexed to, uint256 amount);\\n\\n  function name() external view returns (string memory);\\n\\n  function symbol() external view returns (string memory);\\n\\n  function decimals() external view returns (uint8);\\n\\n  function totalSupply() external view returns (uint256);\\n\\n  function balanceOf(uint256 owner) external view returns (uint256);\\n\\n  function allowance(uint256 owner, uint256 spender)\\n    external\\n    view\\n    returns (uint256);\\n\\n  function approve(\\n    uint256 from,\\n    uint256 spender,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  function transfer(\\n    uint256 from,\\n    uint256 to,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  function transferFrom(\\n    uint256 executor,\\n    uint256 from,\\n    uint256 to,\\n    uint256 amount\\n  ) external returns (bool);\\n}\\n\\nabstract contract RERC20 is IRarityFungible, Rarity, Ownable, Pausable {\\n  string _name;\\n  string _symbol;\\n  uint256 public _totalSupply = 0;\\n  uint8 public constant _decimals = 18;\\n\\n  mapping(uint256 => uint256) public _balanceOf;\\n  mapping(uint256 => mapping(uint256 => uint256)) public _transferAllowance;\\n\\n  constructor() Rarity() Ownable() Pausable() {}\\n\\n  function name() external view override returns (string memory) {\\n    return _name;\\n  }\\n\\n  function symbol() external view override returns (string memory) {\\n    return _symbol;\\n  }\\n\\n  function decimals() external view override returns (uint8) {\\n    return _decimals;\\n  }\\n\\n  function totalSupply() external view override returns (uint256) {\\n    return _totalSupply;\\n  }\\n\\n  function balanceOf(uint256 owner) external view override returns (uint256) {\\n    return _balanceOf[owner];\\n  }\\n\\n  function allowance(uint256 owner, uint256 spender)\\n    external\\n    view\\n    override\\n    returns (uint256)\\n  {\\n    return _transferAllowance[owner][spender];\\n  }\\n\\n  function approve(\\n    uint256 from,\\n    uint256 spender,\\n    uint256 amount\\n  ) external override returns (bool) {\\n    require(_isRarityApprovedOrOwner(from), \\\"Must be owner\\\");\\n    _transferAllowance[from][spender] = amount;\\n\\n    emit Approval(from, spender, amount);\\n    return true;\\n  }\\n\\n  function transfer(\\n    uint256 from,\\n    uint256 to,\\n    uint256 amount\\n  ) external override returns (bool) {\\n    require(!_isPaused(), \\\"Contract is paused\\\");\\n    require(_isRarityApprovedOrOwner(from), \\\"Must be owner\\\");\\n    _transferTokens(from, to, amount);\\n    return true;\\n  }\\n\\n  function transferFrom(\\n    uint256 executor,\\n    uint256 from,\\n    uint256 to,\\n    uint256 amount\\n  ) external override returns (bool) {\\n    require(!_isPaused(), \\\"Contract is paused\\\");\\n    require(_isRarityApprovedOrOwner(executor), \\\"Must be owner\\\");\\n    uint256 spender = executor;\\n    uint256 allow = _transferAllowance[from][spender];\\n    require(amount <= allow, \\\"Transfer amount greater than approval\\\");\\n    _transferTokens(from, to, amount);\\n    _transferAllowance[from][spender] = allow - amount;\\n    return true;\\n  }\\n\\n  function _transferTokens(\\n    uint256 from,\\n    uint256 to,\\n    uint256 amount\\n  ) internal {\\n    _balanceOf[from] -= amount;\\n    _balanceOf[to] += amount;\\n\\n    emit Transfer(from, to, amount);\\n  }\\n\\n  function setOwner(address _owner) external returns (bool) {\\n    require(_isOwner(msg.sender), \\\"Must be owner\\\");\\n    _setOwner(_owner);\\n    return true;\\n  }\\n}\\n\",\"keccak256\":\"0xd6215634dcd97fabaed5fe09f7520666de4ab9effe5c3dedf2e9e39b7558e6fc\",\"license\":\"MIT\"},\"contracts/abstracts/Rarity.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ninterface IRarity {\\n  function level(uint256) external view returns (uint256);\\n\\n  function getApproved(uint256) external view returns (address);\\n\\n  function isApprovedForAll(address owner, address operator)\\n    external\\n    view\\n    returns (bool);\\n\\n  function ownerOf(uint256) external view returns (address);\\n\\n  function summoner(uint256)\\n    external\\n    view\\n    returns (\\n      uint256,\\n      uint256,\\n      uint256,\\n      uint256\\n    );\\n\\n  function adventure(uint256) external;\\n}\\n\\ninterface IRarityAttributes {\\n  function ability_scores(uint256)\\n    external\\n    view\\n    returns (\\n      uint32,\\n      uint32,\\n      uint32,\\n      uint32,\\n      uint32,\\n      uint32\\n    );\\n}\\n\\ninterface IRarityRandomCodex {\\n  function d20(uint256) external view returns (uint256);\\n}\\n\\nabstract contract Rarity {\\n  IRarity constant _rm = IRarity(0xce761D788DF608BD21bdd59d6f4B54b2e27F25Bb);\\n  IRarityAttributes constant _attr =\\n    IRarityAttributes(0xB5F5AF1087A8DA62A23b08C00C6ec9af21F397a1);\\n  IRarityRandomCodex constant _random =\\n    IRarityRandomCodex(0x7426dBE5207C2b5DaC57d8e55F0959fcD99661D4);\\n\\n  constructor() {}\\n\\n  function _isRarityOwner(uint256 _summoner) internal view returns (bool) {\\n    return _rm.ownerOf(_summoner) == msg.sender;\\n  }\\n\\n  function _isRarityApproved(uint256 _summoner) internal view returns (bool) {\\n    return\\n      _rm.getApproved(_summoner) == msg.sender ||\\n      _rm.isApprovedForAll(_rm.ownerOf(_summoner), msg.sender);\\n  }\\n\\n  function _isRarityApprovedOrOwner(uint256 _summoner)\\n    internal\\n    view\\n    returns (bool)\\n  {\\n    return _isRarityApproved(_summoner) || _isRarityOwner(_summoner);\\n  }\\n\\n  function _getRarity() internal pure returns (IRarity) {\\n    return _rm;\\n  }\\n\\n  function _getRarityAttributes() internal pure returns (IRarityAttributes) {\\n    return _attr;\\n  }\\n\\n  function _getRarityRandom() internal pure returns (IRarityRandomCodex) {\\n    return _random;\\n  }\\n\\n  function _getSummonerAttributes(uint256 _summoner)\\n    internal\\n    view\\n    returns (uint32[6] memory)\\n  {\\n    (\\n      uint32 _str,\\n      uint32 _dex,\\n      uint32 _con,\\n      uint32 _int,\\n      uint32 _wis,\\n      uint32 _cha\\n    ) = _attr.ability_scores(_summoner);\\n    uint32[6] memory scores = [_str, _dex, _con, _int, _wis, _cha];\\n    return scores;\\n  }\\n\\n  function _getSummoner(uint256 _summoner)\\n    internal\\n    view\\n    returns (uint256[4] memory)\\n  {\\n    (uint256 _xp, uint256 _log, uint256 _class, uint256 _level) = _rm.summoner(\\n      _summoner\\n    );\\n    uint256[4] memory result = [_xp, _log, _class, _level];\\n    return result;\\n  }\\n}\\n\",\"keccak256\":\"0x3bbc694ec9e23e448ca912f2bd9510c567a2e69e582725f6b02e9e617b35f405\",\"license\":\"MIT\"},\"contracts/abstracts/Resource.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"./RERC20.sol\\\";\\nimport \\\"./Mintable.sol\\\";\\nimport \\\"./Burnable.sol\\\";\\nimport \\\"./AbilityModifier.sol\\\";\\n\\nabstract contract Resource is\\n  RERC20,\\n  RarityBurnable,\\n  RarityMintable,\\n  AbilityModifier\\n{\\n  function mint(uint256 summoner, uint256 amount) external {\\n    require(!_isPaused(), \\\"Contract is paused\\\");\\n    require(minters[msg.sender] == true, \\\"Mint Access Denied\\\");\\n    _mint(summoner, amount);\\n  }\\n\\n  function addMinter(address minter) external {\\n    require(msg.sender == owner, \\\"Must be owner\\\");\\n    _addMinter(minter);\\n  }\\n\\n  function removeMinter(address minter) external {\\n    require(msg.sender == owner, \\\"Must be owner\\\");\\n    _removeMinter(minter);\\n  }\\n\\n  function burn(uint256 summoner, uint256 amount) external {\\n    require(!_isPaused(), \\\"Contract is paused\\\");\\n    require(_isRarityOwner(summoner), \\\"Must be owner\\\");\\n    _burn(summoner, amount);\\n  }\\n\\n  function burnFrom(uint256 summoner, uint256 amount) external {\\n    require(!_isPaused(), \\\"Contract is paused\\\");\\n    uint256 allowance = burnAllowance[msg.sender][summoner];\\n    require(amount <= allowance, \\\"Requested Burn greater than approval\\\");\\n    _burn(summoner, amount);\\n    burnAllowance[msg.sender][summoner] = allowance - amount;\\n  }\\n\\n  function burnApprove(\\n    uint256 summoner,\\n    address burner,\\n    uint256 amount\\n  ) external {\\n    require(!_isPaused(), \\\"Contract is paused\\\");\\n    require(_isRarityOwner(summoner), \\\"Must be owner\\\");\\n    _burnApprove(summoner, burner, amount);\\n  }\\n}\\n\",\"keccak256\":\"0x2b5a4fd361f85e9862cce8a12f5da47d5fbd7ec708aa3a3b273116eab9ceaa75\",\"license\":\"MIT\"},\"contracts/mill/Flour.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"../abstracts/Resource.sol\\\";\\n\\ncontract Flour is Resource {\\n  constructor() RERC20() {\\n    _name = \\\"RarityFarms-Flour\\\";\\n    _symbol = \\\"FLOUR\\\";\\n  }\\n}\\n\",\"keccak256\":\"0x8361fa6653df45fc81503cceb8b3b6796280353054bddee15eb493d41669cb41\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405260006004553480156200001657600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060146101000a81548160ff02191690831515021790555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506040518060400160405280601181526020017f5261726974794661726d732d466c6f757200000000000000000000000000000081525060029080519060200190620001159291906200016a565b506040518060400160405280600581526020017f464c4f555200000000000000000000000000000000000000000000000000000081525060039080519060200190620001639291906200016a565b506200027f565b82805462000178906200021a565b90600052602060002090601f0160209004810192826200019c5760008555620001e8565b82601f10620001b757805160ff1916838001178555620001e8565b82800160010185558215620001e8579182015b82811115620001e7578251825591602001919060010190620001ca565b5b509050620001f79190620001fb565b5090565b5b8082111562000216576000816000905550600101620001fc565b5090565b600060028204905060018216806200023357607f821691505b602082108114156200024a576200024962000250565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6124f0806200028f6000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806378d5da6b1161010f578063983b2d56116100a2578063cca16fa811610071578063cca16fa8146105aa578063e99583a4146105da578063f46eccc41461060a578063fe1ba9741461063a576101e5565b8063983b2d56146105125780639cc7f7081461052e578063b390c0ab1461055e578063b866c8a41461057a576101e5565b80638856f779116100de5780638856f779146104765780638da5cb5b146104a657806390dd2627146104c457806395d89b41146104f4576101e5565b806378d5da6b146103ee57806380f51c121461040c5780638456cb591461043c5780638769fd411461045a576101e5565b8063313ce567116101875780633eaaf86b116101565780633eaaf86b146103645780633f4ba83a146103825780635c975abb146103a05780636a0d343a146103be576101e5565b8063313ce567146102da57806332424aa3146102f857806338f48c7e146103165780633a19cc8d14610346576101e5565b806313af4035116101c357806313af40351461025457806318160ddd146102845780631b2ef1ca146102a25780633092afd5146102be576101e5565b806306fdde03146101ea5780630c68efe3146102085780630d99bd6c14610224575b600080fd5b6101f261066a565b6040516101ff9190611f88565b60405180910390f35b610222600480360381019061021d9190611bb6565b6106fc565b005b61023e60048036038101906102399190611b1c565b61079d565b60405161024b91906120aa565b60405180910390f35b61026e60048036038101906102699190611ac2565b6107c2565b60405161027b9190611f6d565b60405180910390f35b61028c61081f565b60405161029991906120aa565b60405180910390f35b6102bc60048036038101906102b79190611c09565b610829565b005b6102d860048036038101906102d39190611ac2565b610912565b005b6102e26109ac565b6040516102ef91906120c5565b60405180910390f35b6103006109b5565b60405161030d91906120c5565b60405180910390f35b610330600480360381019061032b9190611b89565b6109ba565b60405161033d91906120c5565b60405180910390f35b61034e6109e4565b60405161035b9190611f52565b60405180910390f35b61036c610a55565b60405161037991906120aa565b60405180910390f35b61038a610a5b565b6040516103979190611f6d565b60405180910390f35b6103a8610af8565b6040516103b59190611f6d565b60405180910390f35b6103d860048036038101906103d39190611c09565b610b0b565b6040516103e591906120aa565b60405180910390f35b6103f6610b30565b6040516104039190611f52565b60405180910390f35b61042660048036038101906104219190611ac2565b610ba1565b6040516104339190611f6d565b60405180910390f35b610444610bc1565b6040516104519190611f6d565b60405180910390f35b610474600480360381019061046f9190611c09565b610c5e565b005b610490600480360381019061048b9190611c9c565b610dad565b60405161049d9190611f6d565b60405180910390f35b6104ae610efd565b6040516104bb9190611f0e565b60405180910390f35b6104de60048036038101906104d99190611c49565b610f21565b6040516104eb9190611f6d565b60405180910390f35b6104fc610fc9565b6040516105099190611f88565b60405180910390f35b61052c60048036038101906105279190611ac2565b61105b565b005b61054860048036038101906105439190611b89565b6110f5565b60405161055591906120aa565b60405180910390f35b61057860048036038101906105739190611c09565b611112565b005b610594600480360381019061058f9190611c49565b6111b0565b6040516105a19190611f6d565b60405180910390f35b6105c460048036038101906105bf9190611c09565b611267565b6040516105d191906120aa565b60405180910390f35b6105f460048036038101906105ef9190611b89565b611296565b60405161060191906120aa565b60405180910390f35b610624600480360381019061061f9190611ac2565b6112ae565b6040516106319190611f6d565b60405180910390f35b610654600480360381019061064f9190611b89565b6112ce565b60405161066191906120c5565b60405180910390f35b6060600280546106799061223b565b80601f01602080910402602001604051908101604052809291908181526020018280546106a59061223b565b80156106f25780601f106106c7576101008083540402835291602001916106f2565b820191906000526020600020905b8154815290600101906020018083116106d557829003601f168201915b5050505050905090565b6107046112f8565b15610744576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073b9061206a565b60405180910390fd5b61074d83611316565b61078c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107839061200a565b60405180910390fd5b6107978383836113ea565b50505050565b6007602052816000526040600020602052806000526040600020600091509150505481565b60006107cd3361149b565b61080c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108039061200a565b60405180910390fd5b610815826114f3565b5060019050919050565b6000600454905090565b6108316112f8565b15610871576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108689061206a565b60405180910390fd5b60011515600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610904576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fb90611fea565b60405180910390fd5b61090e828261153e565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109979061200a565b60405180910390fd5b6109a9816115be565b50565b60006012905090565b601281565b600a81600681106109ca57600080fd5b60209182820401919006915054906101000a900460ff1681565b6109ec611a4c565b6009600680602002604051908101604052809291908260068015610a4b576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411610a145790505b5050505050905090565b60045481565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610ae9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae09061208a565b60405180910390fd5b610af1611619565b6001905090565b600060149054906101000a900460ff1681565b6006602052816000526040600020602052806000526040600020600091509150505481565b610b38611a4c565b600a600680602002604051908101604052809291908260068015610b97576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411610b605790505b5050505050905090565b60016020528060005260406000206000915054906101000a900460ff1681565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610c4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4690611fca565b60405180910390fd5b610c57611635565b6001905090565b610c666112f8565b15610ca6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9d9061206a565b60405180910390fd5b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080821115610d3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d359061202a565b60405180910390fd5b610d488383611652565b8181610d54919061217f565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002081905550505050565b6000610db76112f8565b15610df7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dee9061206a565b60405180910390fd5b610e0085611727565b610e3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e369061200a565b60405180910390fd5b6000859050600060066000878152602001908152602001600020600083815260200190815260200160002054905080841115610eb0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea79061204a565b60405180910390fd5b610ebb868686611749565b8381610ec7919061217f565b60066000888152602001908152602001600020600084815260200190815260200160002081905550600192505050949350505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610f2b6112f8565b15610f6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f629061206a565b60405180910390fd5b610f7484611727565b610fb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610faa9061200a565b60405180910390fd5b610fbe848484611749565b600190509392505050565b606060038054610fd89061223b565b80601f01602080910402602001604051908101604052809291908181526020018280546110049061223b565b80156110515780601f1061102657610100808354040283529160200191611051565b820191906000526020600020905b81548152906001019060200180831161103457829003601f168201915b5050505050905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e09061200a565b60405180910390fd5b6110f2816117db565b50565b600060056000838152602001908152602001600020549050919050565b61111a6112f8565b1561115a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111519061206a565b60405180910390fd5b61116382611316565b6111a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111999061200a565b60405180910390fd5b6111ac8282611652565b5050565b60006111bb84611727565b6111fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f19061200a565b60405180910390fd5b816006600086815260200190815260200160002060008581526020019081526020016000208190555082847f08aaf4f7dd1adfa5bfe7067dea5b4ebd7e119d43257438a9189f37d7044eb09a8460405161125491906120aa565b60405180910390a3600190509392505050565b600060066000848152602001908152602001600020600083815260200190815260200160002054905092915050565b60056020528060005260406000206000915090505481565b60086020528060005260406000206000915054906101000a900460ff1681565b600981600681106112de57600080fd5b60209182820401919006915054906101000a900460ff1681565b600060011515600060149054906101000a900460ff16151514905090565b60003373ffffffffffffffffffffffffffffffffffffffff1673ce761d788df608bd21bdd59d6f4b54b2e27f25bb73ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b815260040161137c91906120aa565b60206040518083038186803b15801561139457600080fd5b505afa1580156113a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113cc9190611aef565b73ffffffffffffffffffffffffffffffffffffffff16149050919050565b600081600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff16847f25513def906e48f9e4a3b482e5ff228d356d8dda4744112c24c666c2d270fbeb8460405161148891906120aa565b60405180910390a3600190509392505050565b60008173ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16149050919050565b6000816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b80600460008282546115509190612129565b925050819055508060056000848152602001908152602001600020600082825461157a9190612129565b9250508190555081827f070aa035fe0a09f0d9305bdc2d7a5d93cd4733db3b1ff869b4a7033c9501909a836040516115b291906120aa565b60405180910390a35050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008060146101000a81548160ff021916908315150217905550565b6001600060146101000a81548160ff021916908315150217905550565b600060056000848152602001908152602001600020549050818110156116ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a490611faa565b60405180910390fd5b81600460008282546116bf919061217f565b9250508190555081816116d2919061217f565b600560008581526020019081526020016000208190555082837f5af801e983cfd842de8b0797a2d6077db3ac2dea16571e0c7f5080291ca1b9348460405161171a91906120aa565b60405180910390a3505050565b600061173282611836565b80611742575061174182611316565b5b9050919050565b8060056000858152602001908152602001600020600082825461176c919061217f565b92505081905550806005600084815260200190815260200160002060008282546117969190612129565b9250508190555081837faf6151f5085accf2d57e1e7bf7601d3b3982e0de7e9a90f032f8554de9c104f6836040516117ce91906120aa565b60405180910390a3505050565b6001600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60003373ffffffffffffffffffffffffffffffffffffffff1673ce761d788df608bd21bdd59d6f4b54b2e27f25bb73ffffffffffffffffffffffffffffffffffffffff1663081812fc846040518263ffffffff1660e01b815260040161189c91906120aa565b60206040518083038186803b1580156118b457600080fd5b505afa1580156118c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ec9190611aef565b73ffffffffffffffffffffffffffffffffffffffff161480611a45575073ce761d788df608bd21bdd59d6f4b54b2e27f25bb73ffffffffffffffffffffffffffffffffffffffff1663e985e9c573ce761d788df608bd21bdd59d6f4b54b2e27f25bb73ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b815260040161198691906120aa565b60206040518083038186803b15801561199e57600080fd5b505afa1580156119b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119d69190611aef565b336040518363ffffffff1660e01b81526004016119f4929190611f29565b60206040518083038186803b158015611a0c57600080fd5b505afa158015611a20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a449190611b5c565b5b9050919050565b6040518060c00160405280600690602082028036833780820191505090505090565b600081359050611a7d81612475565b92915050565b600081519050611a9281612475565b92915050565b600081519050611aa78161248c565b92915050565b600081359050611abc816124a3565b92915050565b600060208284031215611ad857611ad76122cb565b5b6000611ae684828501611a6e565b91505092915050565b600060208284031215611b0557611b046122cb565b5b6000611b1384828501611a83565b91505092915050565b60008060408385031215611b3357611b326122cb565b5b6000611b4185828601611a6e565b9250506020611b5285828601611aad565b9150509250929050565b600060208284031215611b7257611b716122cb565b5b6000611b8084828501611a98565b91505092915050565b600060208284031215611b9f57611b9e6122cb565b5b6000611bad84828501611aad565b91505092915050565b600080600060608486031215611bcf57611bce6122cb565b5b6000611bdd86828701611aad565b9350506020611bee86828701611a6e565b9250506040611bff86828701611aad565b9150509250925092565b60008060408385031215611c2057611c1f6122cb565b5b6000611c2e85828601611aad565b9250506020611c3f85828601611aad565b9150509250929050565b600080600060608486031215611c6257611c616122cb565b5b6000611c7086828701611aad565b9350506020611c8186828701611aad565b9250506040611c9286828701611aad565b9150509250925092565b60008060008060808587031215611cb657611cb56122cb565b5b6000611cc487828801611aad565b9450506020611cd587828801611aad565b9350506040611ce687828801611aad565b9250506060611cf787828801611aad565b91505092959194509250565b6000611d0f8383611ef0565b60208301905092915050565b611d24816121b3565b82525050565b611d33816120ea565b611d3d818461210d565b9250611d48826120e0565b8060005b83811015611d79578151611d608782611d03565b9650611d6b83612100565b925050600181019050611d4c565b505050505050565b611d8a816121c5565b82525050565b6000611d9b826120f5565b611da58185612118565b9350611db5818560208601612208565b611dbe816122d0565b840191505092915050565b6000611dd6600f83612118565b9150611de1826122e1565b602082019050919050565b6000611df9600c83612118565b9150611e048261230a565b602082019050919050565b6000611e1c601283612118565b9150611e2782612333565b602082019050919050565b6000611e3f600d83612118565b9150611e4a8261235c565b602082019050919050565b6000611e62602483612118565b9150611e6d82612385565b604082019050919050565b6000611e85602583612118565b9150611e90826123d4565b604082019050919050565b6000611ea8601283612118565b9150611eb382612423565b602082019050919050565b6000611ecb600e83612118565b9150611ed68261244c565b602082019050919050565b611eea816121f1565b82525050565b611ef9816121fb565b82525050565b611f08816121fb565b82525050565b6000602082019050611f236000830184611d1b565b92915050565b6000604082019050611f3e6000830185611d1b565b611f4b6020830184611d1b565b9392505050565b600060c082019050611f676000830184611d2a565b92915050565b6000602082019050611f826000830184611d81565b92915050565b60006020820190508181036000830152611fa28184611d90565b905092915050565b60006020820190508181036000830152611fc381611dc9565b9050919050565b60006020820190508181036000830152611fe381611dec565b9050919050565b6000602082019050818103600083015261200381611e0f565b9050919050565b6000602082019050818103600083015261202381611e32565b9050919050565b6000602082019050818103600083015261204381611e55565b9050919050565b6000602082019050818103600083015261206381611e78565b9050919050565b6000602082019050818103600083015261208381611e9b565b9050919050565b600060208201905081810360008301526120a381611ebe565b9050919050565b60006020820190506120bf6000830184611ee1565b92915050565b60006020820190506120da6000830184611eff565b92915050565b6000819050919050565b600060069050919050565b600081519050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b6000612134826121f1565b915061213f836121f1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156121745761217361226d565b5b828201905092915050565b600061218a826121f1565b9150612195836121f1565b9250828210156121a8576121a761226d565b5b828203905092915050565b60006121be826121d1565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561222657808201518184015260208101905061220b565b83811115612235576000848401525b50505050565b6000600282049050600182168061225357607f821691505b602082108114156122675761226661229c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f42616c616e636520746f6f206c6f770000000000000000000000000000000000600082015250565b7f50617573652064656e6965640000000000000000000000000000000000000000600082015250565b7f4d696e74204163636573732044656e6965640000000000000000000000000000600082015250565b7f4d757374206265206f776e657200000000000000000000000000000000000000600082015250565b7f526571756573746564204275726e2067726561746572207468616e206170707260008201527f6f76616c00000000000000000000000000000000000000000000000000000000602082015250565b7f5472616e7366657220616d6f756e742067726561746572207468616e2061707060008201527f726f76616c000000000000000000000000000000000000000000000000000000602082015250565b7f436f6e7472616374206973207061757365640000000000000000000000000000600082015250565b7f556e70617573652064656e696564000000000000000000000000000000000000600082015250565b61247e816121b3565b811461248957600080fd5b50565b612495816121c5565b81146124a057600080fd5b50565b6124ac816121f1565b81146124b757600080fd5b5056fea2646970667358221220275a7a4c86dd07f7595ce7f83d32daf2d6a8e9c453fafc690719353db62f665c64736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101e55760003560e01c806378d5da6b1161010f578063983b2d56116100a2578063cca16fa811610071578063cca16fa8146105aa578063e99583a4146105da578063f46eccc41461060a578063fe1ba9741461063a576101e5565b8063983b2d56146105125780639cc7f7081461052e578063b390c0ab1461055e578063b866c8a41461057a576101e5565b80638856f779116100de5780638856f779146104765780638da5cb5b146104a657806390dd2627146104c457806395d89b41146104f4576101e5565b806378d5da6b146103ee57806380f51c121461040c5780638456cb591461043c5780638769fd411461045a576101e5565b8063313ce567116101875780633eaaf86b116101565780633eaaf86b146103645780633f4ba83a146103825780635c975abb146103a05780636a0d343a146103be576101e5565b8063313ce567146102da57806332424aa3146102f857806338f48c7e146103165780633a19cc8d14610346576101e5565b806313af4035116101c357806313af40351461025457806318160ddd146102845780631b2ef1ca146102a25780633092afd5146102be576101e5565b806306fdde03146101ea5780630c68efe3146102085780630d99bd6c14610224575b600080fd5b6101f261066a565b6040516101ff9190611f88565b60405180910390f35b610222600480360381019061021d9190611bb6565b6106fc565b005b61023e60048036038101906102399190611b1c565b61079d565b60405161024b91906120aa565b60405180910390f35b61026e60048036038101906102699190611ac2565b6107c2565b60405161027b9190611f6d565b60405180910390f35b61028c61081f565b60405161029991906120aa565b60405180910390f35b6102bc60048036038101906102b79190611c09565b610829565b005b6102d860048036038101906102d39190611ac2565b610912565b005b6102e26109ac565b6040516102ef91906120c5565b60405180910390f35b6103006109b5565b60405161030d91906120c5565b60405180910390f35b610330600480360381019061032b9190611b89565b6109ba565b60405161033d91906120c5565b60405180910390f35b61034e6109e4565b60405161035b9190611f52565b60405180910390f35b61036c610a55565b60405161037991906120aa565b60405180910390f35b61038a610a5b565b6040516103979190611f6d565b60405180910390f35b6103a8610af8565b6040516103b59190611f6d565b60405180910390f35b6103d860048036038101906103d39190611c09565b610b0b565b6040516103e591906120aa565b60405180910390f35b6103f6610b30565b6040516104039190611f52565b60405180910390f35b61042660048036038101906104219190611ac2565b610ba1565b6040516104339190611f6d565b60405180910390f35b610444610bc1565b6040516104519190611f6d565b60405180910390f35b610474600480360381019061046f9190611c09565b610c5e565b005b610490600480360381019061048b9190611c9c565b610dad565b60405161049d9190611f6d565b60405180910390f35b6104ae610efd565b6040516104bb9190611f0e565b60405180910390f35b6104de60048036038101906104d99190611c49565b610f21565b6040516104eb9190611f6d565b60405180910390f35b6104fc610fc9565b6040516105099190611f88565b60405180910390f35b61052c60048036038101906105279190611ac2565b61105b565b005b61054860048036038101906105439190611b89565b6110f5565b60405161055591906120aa565b60405180910390f35b61057860048036038101906105739190611c09565b611112565b005b610594600480360381019061058f9190611c49565b6111b0565b6040516105a19190611f6d565b60405180910390f35b6105c460048036038101906105bf9190611c09565b611267565b6040516105d191906120aa565b60405180910390f35b6105f460048036038101906105ef9190611b89565b611296565b60405161060191906120aa565b60405180910390f35b610624600480360381019061061f9190611ac2565b6112ae565b6040516106319190611f6d565b60405180910390f35b610654600480360381019061064f9190611b89565b6112ce565b60405161066191906120c5565b60405180910390f35b6060600280546106799061223b565b80601f01602080910402602001604051908101604052809291908181526020018280546106a59061223b565b80156106f25780601f106106c7576101008083540402835291602001916106f2565b820191906000526020600020905b8154815290600101906020018083116106d557829003601f168201915b5050505050905090565b6107046112f8565b15610744576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073b9061206a565b60405180910390fd5b61074d83611316565b61078c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107839061200a565b60405180910390fd5b6107978383836113ea565b50505050565b6007602052816000526040600020602052806000526040600020600091509150505481565b60006107cd3361149b565b61080c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108039061200a565b60405180910390fd5b610815826114f3565b5060019050919050565b6000600454905090565b6108316112f8565b15610871576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108689061206a565b60405180910390fd5b60011515600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610904576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fb90611fea565b60405180910390fd5b61090e828261153e565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109979061200a565b60405180910390fd5b6109a9816115be565b50565b60006012905090565b601281565b600a81600681106109ca57600080fd5b60209182820401919006915054906101000a900460ff1681565b6109ec611a4c565b6009600680602002604051908101604052809291908260068015610a4b576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411610a145790505b5050505050905090565b60045481565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610ae9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae09061208a565b60405180910390fd5b610af1611619565b6001905090565b600060149054906101000a900460ff1681565b6006602052816000526040600020602052806000526040600020600091509150505481565b610b38611a4c565b600a600680602002604051908101604052809291908260068015610b97576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411610b605790505b5050505050905090565b60016020528060005260406000206000915054906101000a900460ff1681565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610c4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4690611fca565b60405180910390fd5b610c57611635565b6001905090565b610c666112f8565b15610ca6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9d9061206a565b60405180910390fd5b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080821115610d3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d359061202a565b60405180910390fd5b610d488383611652565b8181610d54919061217f565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002081905550505050565b6000610db76112f8565b15610df7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dee9061206a565b60405180910390fd5b610e0085611727565b610e3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e369061200a565b60405180910390fd5b6000859050600060066000878152602001908152602001600020600083815260200190815260200160002054905080841115610eb0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea79061204a565b60405180910390fd5b610ebb868686611749565b8381610ec7919061217f565b60066000888152602001908152602001600020600084815260200190815260200160002081905550600192505050949350505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610f2b6112f8565b15610f6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f629061206a565b60405180910390fd5b610f7484611727565b610fb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610faa9061200a565b60405180910390fd5b610fbe848484611749565b600190509392505050565b606060038054610fd89061223b565b80601f01602080910402602001604051908101604052809291908181526020018280546110049061223b565b80156110515780601f1061102657610100808354040283529160200191611051565b820191906000526020600020905b81548152906001019060200180831161103457829003601f168201915b5050505050905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e09061200a565b60405180910390fd5b6110f2816117db565b50565b600060056000838152602001908152602001600020549050919050565b61111a6112f8565b1561115a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111519061206a565b60405180910390fd5b61116382611316565b6111a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111999061200a565b60405180910390fd5b6111ac8282611652565b5050565b60006111bb84611727565b6111fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f19061200a565b60405180910390fd5b816006600086815260200190815260200160002060008581526020019081526020016000208190555082847f08aaf4f7dd1adfa5bfe7067dea5b4ebd7e119d43257438a9189f37d7044eb09a8460405161125491906120aa565b60405180910390a3600190509392505050565b600060066000848152602001908152602001600020600083815260200190815260200160002054905092915050565b60056020528060005260406000206000915090505481565b60086020528060005260406000206000915054906101000a900460ff1681565b600981600681106112de57600080fd5b60209182820401919006915054906101000a900460ff1681565b600060011515600060149054906101000a900460ff16151514905090565b60003373ffffffffffffffffffffffffffffffffffffffff1673ce761d788df608bd21bdd59d6f4b54b2e27f25bb73ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b815260040161137c91906120aa565b60206040518083038186803b15801561139457600080fd5b505afa1580156113a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113cc9190611aef565b73ffffffffffffffffffffffffffffffffffffffff16149050919050565b600081600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff16847f25513def906e48f9e4a3b482e5ff228d356d8dda4744112c24c666c2d270fbeb8460405161148891906120aa565b60405180910390a3600190509392505050565b60008173ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16149050919050565b6000816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b80600460008282546115509190612129565b925050819055508060056000848152602001908152602001600020600082825461157a9190612129565b9250508190555081827f070aa035fe0a09f0d9305bdc2d7a5d93cd4733db3b1ff869b4a7033c9501909a836040516115b291906120aa565b60405180910390a35050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008060146101000a81548160ff021916908315150217905550565b6001600060146101000a81548160ff021916908315150217905550565b600060056000848152602001908152602001600020549050818110156116ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a490611faa565b60405180910390fd5b81600460008282546116bf919061217f565b9250508190555081816116d2919061217f565b600560008581526020019081526020016000208190555082837f5af801e983cfd842de8b0797a2d6077db3ac2dea16571e0c7f5080291ca1b9348460405161171a91906120aa565b60405180910390a3505050565b600061173282611836565b80611742575061174182611316565b5b9050919050565b8060056000858152602001908152602001600020600082825461176c919061217f565b92505081905550806005600084815260200190815260200160002060008282546117969190612129565b9250508190555081837faf6151f5085accf2d57e1e7bf7601d3b3982e0de7e9a90f032f8554de9c104f6836040516117ce91906120aa565b60405180910390a3505050565b6001600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60003373ffffffffffffffffffffffffffffffffffffffff1673ce761d788df608bd21bdd59d6f4b54b2e27f25bb73ffffffffffffffffffffffffffffffffffffffff1663081812fc846040518263ffffffff1660e01b815260040161189c91906120aa565b60206040518083038186803b1580156118b457600080fd5b505afa1580156118c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ec9190611aef565b73ffffffffffffffffffffffffffffffffffffffff161480611a45575073ce761d788df608bd21bdd59d6f4b54b2e27f25bb73ffffffffffffffffffffffffffffffffffffffff1663e985e9c573ce761d788df608bd21bdd59d6f4b54b2e27f25bb73ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b815260040161198691906120aa565b60206040518083038186803b15801561199e57600080fd5b505afa1580156119b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119d69190611aef565b336040518363ffffffff1660e01b81526004016119f4929190611f29565b60206040518083038186803b158015611a0c57600080fd5b505afa158015611a20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a449190611b5c565b5b9050919050565b6040518060c00160405280600690602082028036833780820191505090505090565b600081359050611a7d81612475565b92915050565b600081519050611a9281612475565b92915050565b600081519050611aa78161248c565b92915050565b600081359050611abc816124a3565b92915050565b600060208284031215611ad857611ad76122cb565b5b6000611ae684828501611a6e565b91505092915050565b600060208284031215611b0557611b046122cb565b5b6000611b1384828501611a83565b91505092915050565b60008060408385031215611b3357611b326122cb565b5b6000611b4185828601611a6e565b9250506020611b5285828601611aad565b9150509250929050565b600060208284031215611b7257611b716122cb565b5b6000611b8084828501611a98565b91505092915050565b600060208284031215611b9f57611b9e6122cb565b5b6000611bad84828501611aad565b91505092915050565b600080600060608486031215611bcf57611bce6122cb565b5b6000611bdd86828701611aad565b9350506020611bee86828701611a6e565b9250506040611bff86828701611aad565b9150509250925092565b60008060408385031215611c2057611c1f6122cb565b5b6000611c2e85828601611aad565b9250506020611c3f85828601611aad565b9150509250929050565b600080600060608486031215611c6257611c616122cb565b5b6000611c7086828701611aad565b9350506020611c8186828701611aad565b9250506040611c9286828701611aad565b9150509250925092565b60008060008060808587031215611cb657611cb56122cb565b5b6000611cc487828801611aad565b9450506020611cd587828801611aad565b9350506040611ce687828801611aad565b9250506060611cf787828801611aad565b91505092959194509250565b6000611d0f8383611ef0565b60208301905092915050565b611d24816121b3565b82525050565b611d33816120ea565b611d3d818461210d565b9250611d48826120e0565b8060005b83811015611d79578151611d608782611d03565b9650611d6b83612100565b925050600181019050611d4c565b505050505050565b611d8a816121c5565b82525050565b6000611d9b826120f5565b611da58185612118565b9350611db5818560208601612208565b611dbe816122d0565b840191505092915050565b6000611dd6600f83612118565b9150611de1826122e1565b602082019050919050565b6000611df9600c83612118565b9150611e048261230a565b602082019050919050565b6000611e1c601283612118565b9150611e2782612333565b602082019050919050565b6000611e3f600d83612118565b9150611e4a8261235c565b602082019050919050565b6000611e62602483612118565b9150611e6d82612385565b604082019050919050565b6000611e85602583612118565b9150611e90826123d4565b604082019050919050565b6000611ea8601283612118565b9150611eb382612423565b602082019050919050565b6000611ecb600e83612118565b9150611ed68261244c565b602082019050919050565b611eea816121f1565b82525050565b611ef9816121fb565b82525050565b611f08816121fb565b82525050565b6000602082019050611f236000830184611d1b565b92915050565b6000604082019050611f3e6000830185611d1b565b611f4b6020830184611d1b565b9392505050565b600060c082019050611f676000830184611d2a565b92915050565b6000602082019050611f826000830184611d81565b92915050565b60006020820190508181036000830152611fa28184611d90565b905092915050565b60006020820190508181036000830152611fc381611dc9565b9050919050565b60006020820190508181036000830152611fe381611dec565b9050919050565b6000602082019050818103600083015261200381611e0f565b9050919050565b6000602082019050818103600083015261202381611e32565b9050919050565b6000602082019050818103600083015261204381611e55565b9050919050565b6000602082019050818103600083015261206381611e78565b9050919050565b6000602082019050818103600083015261208381611e9b565b9050919050565b600060208201905081810360008301526120a381611ebe565b9050919050565b60006020820190506120bf6000830184611ee1565b92915050565b60006020820190506120da6000830184611eff565b92915050565b6000819050919050565b600060069050919050565b600081519050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b6000612134826121f1565b915061213f836121f1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156121745761217361226d565b5b828201905092915050565b600061218a826121f1565b9150612195836121f1565b9250828210156121a8576121a761226d565b5b828203905092915050565b60006121be826121d1565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561222657808201518184015260208101905061220b565b83811115612235576000848401525b50505050565b6000600282049050600182168061225357607f821691505b602082108114156122675761226661229c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f42616c616e636520746f6f206c6f770000000000000000000000000000000000600082015250565b7f50617573652064656e6965640000000000000000000000000000000000000000600082015250565b7f4d696e74204163636573732044656e6965640000000000000000000000000000600082015250565b7f4d757374206265206f776e657200000000000000000000000000000000000000600082015250565b7f526571756573746564204275726e2067726561746572207468616e206170707260008201527f6f76616c00000000000000000000000000000000000000000000000000000000602082015250565b7f5472616e7366657220616d6f756e742067726561746572207468616e2061707060008201527f726f76616c000000000000000000000000000000000000000000000000000000602082015250565b7f436f6e7472616374206973207061757365640000000000000000000000000000600082015250565b7f556e70617573652064656e696564000000000000000000000000000000000000600082015250565b61247e816121b3565b811461248957600080fd5b50565b612495816121c5565b81146124a057600080fd5b50565b6124ac816121f1565b81146124b757600080fd5b5056fea2646970667358221220275a7a4c86dd07f7595ce7f83d32daf2d6a8e9c453fafc690719353db62f665c64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 274,
        "contract": "contracts/mill/Flour.sol:Flour",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 314,
        "contract": "contracts/mill/Flour.sol:Flour",
        "label": "paused",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 318,
        "contract": "contracts/mill/Flour.sol:Flour",
        "label": "pausers",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 533,
        "contract": "contracts/mill/Flour.sol:Flour",
        "label": "_name",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 535,
        "contract": "contracts/mill/Flour.sol:Flour",
        "label": "_symbol",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 538,
        "contract": "contracts/mill/Flour.sol:Flour",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 545,
        "contract": "contracts/mill/Flour.sol:Flour",
        "label": "_balanceOf",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 551,
        "contract": "contracts/mill/Flour.sol:Flour",
        "label": "_transferAllowance",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 41,
        "contract": "contracts/mill/Flour.sol:Flour",
        "label": "burnAllowance",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 213,
        "contract": "contracts/mill/Flour.sol:Flour",
        "label": "minters",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 5,
        "contract": "contracts/mill/Flour.sol:Flour",
        "label": "_increaseAbility",
        "offset": 0,
        "slot": "9",
        "type": "t_array(t_uint8)6_storage"
      },
      {
        "astId": 9,
        "contract": "contracts/mill/Flour.sol:Flour",
        "label": "_decreaseAbility",
        "offset": 0,
        "slot": "10",
        "type": "t_array(t_uint8)6_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint8)6_storage": {
        "base": "t_uint8",
        "encoding": "inplace",
        "label": "uint8[6]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}