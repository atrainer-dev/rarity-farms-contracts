{
  "address": "0x04C89607413713Ec9775E14b954286519d836FEf",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_corn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wheat",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_beans",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_barley",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_meal",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_flour",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oil",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_malt",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "barley",
      "outputs": [
        {
          "internalType": "contract ICrop",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beans",
      "outputs": [
        {
          "internalType": "contract ICrop",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "corn",
      "outputs": [
        {
          "internalType": "contract ICrop",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "flour",
      "outputs": [
        {
          "internalType": "contract IRefinedResource",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "malt",
      "outputs": [
        {
          "internalType": "contract IRefinedResource",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "meal",
      "outputs": [
        {
          "internalType": "contract IRefinedResource",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oil",
      "outputs": [
        {
          "internalType": "contract IRefinedResource",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pausers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "summoner",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "refineBarley",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "summoner",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "refineBeans",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "summoner",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "refineCorn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "summoner",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "refineWheat",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "refiningCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setRefiningCost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wheat",
      "outputs": [
        {
          "internalType": "contract ICrop",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x6a769620657ba6ec921a65e6743847eff01f386b5de655ef62085502175ae34e",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x04C89607413713Ec9775E14b954286519d836FEf",
    "transactionIndex": 0,
    "gasUsed": "1394113",
    "logsBloom": "0x
    "blockHash": "0x5a6efa23aa269a2d4ec91d580cf11cfa29390934932433565de5f0e36dc01163",
    "transactionHash": "0x6a769620657ba6ec921a65e6743847eff01f386b5de655ef62085502175ae34e",
    "logs": [],
    "blockNumber": 18231264,
    "cumulativeGasUsed": "1394113",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x2bdCC0de6bE1f7D2ee689a0342D76F52E8EFABa3",
    "0x7969c5eD335650692Bc04293B07F5BF2e7A673C0",
    "0xc351628EB244ec633d5f21fBD6621e1a683B1181",
    "0x7bc06c482DEAd17c0e297aFbC32f6e63d3846650",
    "0x922D6956C99E12DFeB3224DEA977D0939758A1Fe",
    "0x5081a39b8A5f0E35a8D959395a630b68B74Dd30f",
    "0x1fA02b2d6A771842690194Cf62D91bdd92BfE28d",
    "0xdbC43Ba45381e02825b14322cDdd15eC4B3164E6"
  ],
  "solcInputHash": "04d15b36f8ed2c2592d1a920224fd54c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_corn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wheat\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_beans\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_barley\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_meal\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_flour\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oil\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_malt\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"barley\",\"outputs\":[{\"internalType\":\"contract ICrop\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beans\",\"outputs\":[{\"internalType\":\"contract ICrop\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"corn\",\"outputs\":[{\"internalType\":\"contract ICrop\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flour\",\"outputs\":[{\"internalType\":\"contract IRefinedResource\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"malt\",\"outputs\":[{\"internalType\":\"contract IRefinedResource\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"meal\",\"outputs\":[{\"internalType\":\"contract IRefinedResource\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oil\",\"outputs\":[{\"internalType\":\"contract IRefinedResource\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pausers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"summoner\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"refineBarley\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"summoner\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"refineBeans\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"summoner\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"refineCorn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"summoner\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"refineWheat\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refiningCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setRefiningCost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wheat\",\"outputs\":[{\"internalType\":\"contract ICrop\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mill/Mill.sol\":\"Mill\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/abstracts/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nabstract contract Ownable {\\n  address public owner;\\n\\n  constructor() {\\n    owner = msg.sender;\\n  }\\n\\n  function _isOwner(address addr) internal view returns (bool) {\\n    return owner == addr;\\n  }\\n\\n  function _setOwner(address addr) internal returns (bool) {\\n    owner = addr;\\n    return true;\\n  }\\n}\\n\",\"keccak256\":\"0xc4263a694a12743fea22f2eaae9094cc65e79204898548d8fc8916231dcf86bd\",\"license\":\"MIT\"},\"contracts/abstracts/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nabstract contract Pausable {\\n  bool public paused;\\n  mapping(address => bool) public pausers;\\n\\n  constructor() {\\n    paused = false;\\n    pausers[msg.sender] = true;\\n  }\\n\\n  function _isPaused() internal view returns (bool) {\\n    return paused == true;\\n  }\\n\\n  function pause() external returns (bool) {\\n    require(pausers[msg.sender], \\\"Pause denied\\\");\\n    _pause();\\n    return true;\\n  }\\n\\n  function unpause() external returns (bool) {\\n    require(pausers[msg.sender], \\\"Unpause denied\\\");\\n    _unpause();\\n    return true;\\n  }\\n\\n  function _addPauser(address addr) internal returns (bool) {\\n    pausers[addr] = true;\\n    return true;\\n  }\\n\\n  function _removePauser(address addr) internal returns (bool) {\\n    pausers[addr] = false;\\n    return true;\\n  }\\n\\n  function _pause() internal {\\n    paused = true;\\n  }\\n\\n  function _unpause() internal {\\n    paused = false;\\n  }\\n}\\n\",\"keccak256\":\"0x97aa1cffaa62bf33d2d70b57e516c689c9cba0c0a6af2ea3c8662f04d4c85bb6\",\"license\":\"MIT\"},\"contracts/abstracts/Rarity.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ninterface IRarity {\\n  function level(uint256) external view returns (uint256);\\n\\n  function getApproved(uint256) external view returns (address);\\n\\n  function isApprovedForAll(address owner, address operator)\\n    external\\n    view\\n    returns (bool);\\n\\n  function ownerOf(uint256) external view returns (address);\\n\\n  function summoner(uint256)\\n    external\\n    view\\n    returns (\\n      uint256,\\n      uint256,\\n      uint256,\\n      uint256\\n    );\\n\\n  function adventure(uint256) external;\\n}\\n\\ninterface IRarityAttributes {\\n  function ability_scores(uint256)\\n    external\\n    view\\n    returns (\\n      uint32,\\n      uint32,\\n      uint32,\\n      uint32,\\n      uint32,\\n      uint32\\n    );\\n}\\n\\ninterface IRarityRandomCodex {\\n  function d20(uint256) external view returns (uint256);\\n}\\n\\nabstract contract Rarity {\\n  IRarity constant _rm = IRarity(0xce761D788DF608BD21bdd59d6f4B54b2e27F25Bb);\\n  IRarityAttributes constant _attr =\\n    IRarityAttributes(0xB5F5AF1087A8DA62A23b08C00C6ec9af21F397a1);\\n  IRarityRandomCodex constant _random =\\n    IRarityRandomCodex(0x7426dBE5207C2b5DaC57d8e55F0959fcD99661D4);\\n\\n  constructor() {}\\n\\n  function _isRarityOwner(uint256 _summoner) internal view returns (bool) {\\n    return _rm.ownerOf(_summoner) == msg.sender;\\n  }\\n\\n  function _isRarityApproved(uint256 _summoner) internal view returns (bool) {\\n    return\\n      _rm.getApproved(_summoner) == msg.sender ||\\n      _rm.isApprovedForAll(_rm.ownerOf(_summoner), msg.sender);\\n  }\\n\\n  function _isRarityApprovedOrOwner(uint256 _summoner)\\n    internal\\n    view\\n    returns (bool)\\n  {\\n    return _isRarityApproved(_summoner) || _isRarityOwner(_summoner);\\n  }\\n\\n  function _getRarity() internal pure returns (IRarity) {\\n    return _rm;\\n  }\\n\\n  function _getRarityAttributes() internal pure returns (IRarityAttributes) {\\n    return _attr;\\n  }\\n\\n  function _getRarityRandom() internal pure returns (IRarityRandomCodex) {\\n    return _random;\\n  }\\n\\n  function _getSummonerAttributes(uint256 _summoner)\\n    internal\\n    view\\n    returns (uint32[6] memory)\\n  {\\n    (\\n      uint32 _str,\\n      uint32 _dex,\\n      uint32 _con,\\n      uint32 _int,\\n      uint32 _wis,\\n      uint32 _cha\\n    ) = _attr.ability_scores(_summoner);\\n    uint32[6] memory scores = [_str, _dex, _con, _int, _wis, _cha];\\n    return scores;\\n  }\\n\\n  function _getSummoner(uint256 _summoner)\\n    internal\\n    view\\n    returns (uint256[4] memory)\\n  {\\n    (uint256 _xp, uint256 _log, uint256 _class, uint256 _level) = _rm.summoner(\\n      _summoner\\n    );\\n    uint256[4] memory result = [_xp, _log, _class, _level];\\n    return result;\\n  }\\n}\\n\",\"keccak256\":\"0x3bbc694ec9e23e448ca912f2bd9510c567a2e69e582725f6b02e9e617b35f405\",\"license\":\"MIT\"},\"contracts/mill/Mill.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"../abstracts/Ownable.sol\\\";\\nimport \\\"../abstracts/Pausable.sol\\\";\\nimport \\\"../abstracts/Rarity.sol\\\";\\n\\ninterface ICrop {\\n  function burnFrom(uint256, uint256) external;\\n\\n  function balanceOf(uint256) external view returns (uint256);\\n}\\n\\ninterface IRefinedResource {\\n  function mint(uint256 summoner, uint256 amount) external;\\n}\\n\\ncontract Mill is Ownable, Pausable, Rarity {\\n  uint256 public refiningCost = 2 * 1e18;\\n\\n  ICrop public corn;\\n  ICrop public wheat;\\n  ICrop public beans;\\n  ICrop public barley;\\n\\n  IRefinedResource public meal;\\n  IRefinedResource public flour;\\n  IRefinedResource public oil;\\n  IRefinedResource public malt;\\n\\n  constructor(\\n    address _corn,\\n    address _wheat,\\n    address _beans,\\n    address _barley,\\n    address _meal,\\n    address _flour,\\n    address _oil,\\n    address _malt\\n  ) {\\n    corn = ICrop(_corn);\\n    wheat = ICrop(_wheat);\\n    beans = ICrop(_beans);\\n    barley = ICrop(_barley);\\n    meal = IRefinedResource(_meal);\\n    flour = IRefinedResource(_flour);\\n    oil = IRefinedResource(_oil);\\n    malt = IRefinedResource(_malt);\\n  }\\n\\n  function refineCorn(uint256 summoner, uint256 amount) external {\\n    _refine(summoner, meal, corn, amount);\\n  }\\n\\n  function refineWheat(uint256 summoner, uint256 amount) external {\\n    _refine(summoner, flour, wheat, amount);\\n  }\\n\\n  function refineBeans(uint256 summoner, uint256 amount) external {\\n    _refine(summoner, oil, beans, amount);\\n  }\\n\\n  function refineBarley(uint256 summoner, uint256 amount) external {\\n    _refine(summoner, malt, barley, amount);\\n  }\\n\\n  function setRefiningCost(uint256 value) external {\\n    require(_isOwner(msg.sender), \\\"Must be owner\\\");\\n    refiningCost = value;\\n  }\\n\\n  function _refine(\\n    uint256 summoner,\\n    IRefinedResource resource,\\n    ICrop crop,\\n    uint256 amount\\n  ) internal {\\n    require(_isRarityOwner(summoner), \\\"Must own NFT\\\");\\n    require(_isPaused() == false, \\\"Mill not available\\\");\\n    require(\\n      amount % refiningCost == 0,\\n      \\\"Amount must be divisible by refining cost\\\"\\n    );\\n    uint256 balance = crop.balanceOf(summoner);\\n    require(balance >= amount, \\\"Crop balance too low\\\");\\n    crop.burnFrom(summoner, amount);\\n    resource.mint(summoner, (amount / refiningCost) * 1e18);\\n  }\\n}\\n\",\"keccak256\":\"0x0d8d6254675c098a55117c9c3307e239274a6d349180478ea5663c1d6a88734d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c806380f51c12116100ad578063af7ddb5e11610071578063af7ddb5e146102d6578063bff7e49f146102f2578063d58215b214610310578063dff87bcb1461032c578063fe86673c1461034a57610121565b806380f51c121461022e5780638456cb591461025e5780638da5cb5b1461027c57806392c8c45e1461029a578063a9300b1e146102b857610121565b80633f4ba83a116100f45780633f4ba83a1461019a578063529522a9146101b857806352a98ead146101d6578063556fe775146101f25780635c975abb1461021057610121565b80630e3577381461012657806319a9f6ef14610144578063273f939214610160578063287a16bb1461017c575b600080fd5b61012e610368565b60405161013b9190610ec9565b60405180910390f35b61015e60048036038101906101599190610cb9565b61038e565b005b61017a60048036038101906101759190610d13565b6103e0565b005b610184610434565b6040516101919190610fdf565b60405180910390f35b6101a261043a565b6040516101af9190610eae565b60405180910390f35b6101c06104d7565b6040516101cd9190610ee4565b60405180910390f35b6101f060048036038101906101eb9190610d13565b6104fd565b005b6101fa610551565b6040516102079190610ee4565b60405180910390f35b610218610577565b6040516102259190610eae565b60405180910390f35b61024860048036038101906102439190610c5f565b61058a565b6040516102559190610eae565b60405180910390f35b6102666105aa565b6040516102739190610eae565b60405180910390f35b610284610647565b6040516102919190610e93565b60405180910390f35b6102a261066b565b6040516102af9190610ec9565b60405180910390f35b6102c0610691565b6040516102cd9190610ec9565b60405180910390f35b6102f060048036038101906102eb9190610d13565b6106b7565b005b6102fa61070b565b6040516103079190610ee4565b60405180910390f35b61032a60048036038101906103259190610d13565b610731565b005b610334610785565b6040516103419190610ee4565b60405180910390f35b6103526107ab565b60405161035f9190610ec9565b60405180910390f35b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610397336107d1565b6103d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cd90610f3f565b60405180910390fd5b8060028190555050565b61043082600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684610829565b5050565b60025481565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166104c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bf90610fbf565b60405180910390fd5b6104d0610ae0565b6001905090565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61054d82600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684610829565b5050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060149054906101000a900460ff1681565b60016020528060005260406000206000915054906101000a900460ff1681565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610638576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062f90610f1f565b60405180910390fd5b610640610afc565b6001905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61070782600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684610829565b5050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61078182600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684610829565b5050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008173ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16149050919050565b61083284610b19565b610871576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086890610eff565b60405180910390fd5b6000151561087d610bed565b1515146108bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b690610f5f565b60405180910390fd5b6000600254826108cf919061114f565b1461090f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090690610f9f565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16639cc7f708866040518263ffffffff1660e01b815260040161094a9190610fdf565b60206040518083038186803b15801561096257600080fd5b505afa158015610976573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099a9190610ce6565b9050818110156109df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d690610f7f565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff16638769fd4186846040518363ffffffff1660e01b8152600401610a1a929190610ffa565b600060405180830381600087803b158015610a3457600080fd5b505af1158015610a48573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff16631b2ef1ca86670de0b6b3a764000060025486610a809190611034565b610a8a9190611065565b6040518363ffffffff1660e01b8152600401610aa7929190610ffa565b600060405180830381600087803b158015610ac157600080fd5b505af1158015610ad5573d6000803e3d6000fd5b505050505050505050565b60008060146101000a81548160ff021916908315150217905550565b6001600060146101000a81548160ff021916908315150217905550565b60003373ffffffffffffffffffffffffffffffffffffffff1673ce761d788df608bd21bdd59d6f4b54b2e27f25bb73ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b8152600401610b7f9190610fdf565b60206040518083038186803b158015610b9757600080fd5b505afa158015610bab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcf9190610c8c565b73ffffffffffffffffffffffffffffffffffffffff16149050919050565b600060011515600060149054906101000a900460ff16151514905090565b600081359050610c1a81611328565b92915050565b600081519050610c2f81611328565b92915050565b600081359050610c448161133f565b92915050565b600081519050610c598161133f565b92915050565b600060208284031215610c7557610c746111de565b5b6000610c8384828501610c0b565b91505092915050565b600060208284031215610ca257610ca16111de565b5b6000610cb084828501610c20565b91505092915050565b600060208284031215610ccf57610cce6111de565b5b6000610cdd84828501610c35565b91505092915050565b600060208284031215610cfc57610cfb6111de565b5b6000610d0a84828501610c4a565b91505092915050565b60008060408385031215610d2a57610d296111de565b5b6000610d3885828601610c35565b9250506020610d4985828601610c35565b9150509250929050565b610d5c816110bf565b82525050565b610d6b816110d1565b82525050565b610d7a81611107565b82525050565b610d8981611119565b82525050565b6000610d9c600c83611023565b9150610da7826111e3565b602082019050919050565b6000610dbf600c83611023565b9150610dca8261120c565b602082019050919050565b6000610de2600d83611023565b9150610ded82611235565b602082019050919050565b6000610e05601283611023565b9150610e108261125e565b602082019050919050565b6000610e28601483611023565b9150610e3382611287565b602082019050919050565b6000610e4b602983611023565b9150610e56826112b0565b604082019050919050565b6000610e6e600e83611023565b9150610e79826112ff565b602082019050919050565b610e8d816110fd565b82525050565b6000602082019050610ea86000830184610d53565b92915050565b6000602082019050610ec36000830184610d62565b92915050565b6000602082019050610ede6000830184610d71565b92915050565b6000602082019050610ef96000830184610d80565b92915050565b60006020820190508181036000830152610f1881610d8f565b9050919050565b60006020820190508181036000830152610f3881610db2565b9050919050565b60006020820190508181036000830152610f5881610dd5565b9050919050565b60006020820190508181036000830152610f7881610df8565b9050919050565b60006020820190508181036000830152610f9881610e1b565b9050919050565b60006020820190508181036000830152610fb881610e3e565b9050919050565b60006020820190508181036000830152610fd881610e61565b9050919050565b6000602082019050610ff46000830184610e84565b92915050565b600060408201905061100f6000830185610e84565b61101c6020830184610e84565b9392505050565b600082825260208201905092915050565b600061103f826110fd565b915061104a836110fd565b92508261105a576110596111af565b5b828204905092915050565b6000611070826110fd565b915061107b836110fd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156110b4576110b3611180565b5b828202905092915050565b60006110ca826110dd565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006111128261112b565b9050919050565b60006111248261112b565b9050919050565b60006111368261113d565b9050919050565b6000611148826110dd565b9050919050565b600061115a826110fd565b9150611165836110fd565b925082611175576111746111af565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4d757374206f776e204e46540000000000000000000000000000000000000000600082015250565b7f50617573652064656e6965640000000000000000000000000000000000000000600082015250565b7f4d757374206265206f776e657200000000000000000000000000000000000000600082015250565b7f4d696c6c206e6f7420617661696c61626c650000000000000000000000000000600082015250565b7f43726f702062616c616e636520746f6f206c6f77000000000000000000000000600082015250565b7f416d6f756e74206d75737420626520646976697369626c65206279207265666960008201527f6e696e6720636f73740000000000000000000000000000000000000000000000602082015250565b7f556e70617573652064656e696564000000000000000000000000000000000000600082015250565b611331816110bf565b811461133c57600080fd5b50565b611348816110fd565b811461135357600080fd5b5056fea2646970667358221220353c7715b021328f4827541dacdbe342a059052e06a5089e1e5e28674eeafb5464736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3,
        "contract": "contracts/mill/Mill.sol:Mill",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 43,
        "contract": "contracts/mill/Mill.sol:Mill",
        "label": "paused",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 47,
        "contract": "contracts/mill/Mill.sol:Mill",
        "label": "pausers",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 463,
        "contract": "contracts/mill/Mill.sol:Mill",
        "label": "refiningCost",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 466,
        "contract": "contracts/mill/Mill.sol:Mill",
        "label": "corn",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(ICrop)444"
      },
      {
        "astId": 469,
        "contract": "contracts/mill/Mill.sol:Mill",
        "label": "wheat",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(ICrop)444"
      },
      {
        "astId": 472,
        "contract": "contracts/mill/Mill.sol:Mill",
        "label": "beans",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(ICrop)444"
      },
      {
        "astId": 475,
        "contract": "contracts/mill/Mill.sol:Mill",
        "label": "barley",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(ICrop)444"
      },
      {
        "astId": 478,
        "contract": "contracts/mill/Mill.sol:Mill",
        "label": "meal",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(IRefinedResource)452"
      },
      {
        "astId": 481,
        "contract": "contracts/mill/Mill.sol:Mill",
        "label": "flour",
        "offset": 0,
        "slot": "8",
        "type": "t_contract(IRefinedResource)452"
      },
      {
        "astId": 484,
        "contract": "contracts/mill/Mill.sol:Mill",
        "label": "oil",
        "offset": 0,
        "slot": "9",
        "type": "t_contract(IRefinedResource)452"
      },
      {
        "astId": 487,
        "contract": "contracts/mill/Mill.sol:Mill",
        "label": "malt",
        "offset": 0,
        "slot": "10",
        "type": "t_contract(IRefinedResource)452"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(ICrop)444": {
        "encoding": "inplace",
        "label": "contract ICrop",
        "numberOfBytes": "20"
      },
      "t_contract(IRefinedResource)452": {
        "encoding": "inplace",
        "label": "contract IRefinedResource",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}