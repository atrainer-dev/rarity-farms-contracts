{
  "address": "0xe864874995697d0d1C1726196c1275feAdC1Da94",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_corn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wheat",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_beans",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_barley",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_meal",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_flour",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oil",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_malt",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "barley",
      "outputs": [
        {
          "internalType": "contract ICrop",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beans",
      "outputs": [
        {
          "internalType": "contract ICrop",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clearDisaster",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "corn",
      "outputs": [
        {
          "internalType": "contract ICrop",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disaster",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "flour",
      "outputs": [
        {
          "internalType": "contract IRefinedResource",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRefiningCosts",
      "outputs": [
        {
          "internalType": "uint8[4]",
          "name": "",
          "type": "uint8[4]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "summoner",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "makeFlour",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "summoner",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "makeMalt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "summoner",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "makeMeal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "summoner",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "makeOil",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "malt",
      "outputs": [
        {
          "internalType": "contract IRefinedResource",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "meal",
      "outputs": [
        {
          "internalType": "contract IRefinedResource",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oil",
      "outputs": [
        {
          "internalType": "contract IRefinedResource",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pausers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "refiningCosts",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setDisaster",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "cornCost",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "wheatCost",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "beansCost",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "barleyCost",
          "type": "uint8"
        }
      ],
      "name": "setRefiningCosts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wheat",
      "outputs": [
        {
          "internalType": "contract ICrop",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x3ab01c5b88df5888036b7df084e685186a48398d135192aad5e507b241087a9e",
  "receipt": {
    "to": null,
    "from": "0xE10773bB4317a3D3A5D0F22fF2C6FFf9e3E9968e",
    "contractAddress": "0xe864874995697d0d1C1726196c1275feAdC1Da94",
    "transactionIndex": 1,
    "gasUsed": "1807332",
    "logsBloom": "0x
    "blockHash": "0x0000135f0000056168d40f51b7ca21002fb8e4aaf15e74ee501438ec133697a0",
    "transactionHash": "0x3ab01c5b88df5888036b7df084e685186a48398d135192aad5e507b241087a9e",
    "logs": [],
    "blockNumber": 4007113,
    "cumulativeGasUsed": "1894506",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xCbA99CD7E70FDb874AfCf5dc7D590D7840497f69",
    "0xD092b10C77159d31EFeB7c66A55EcdB7D1ADc73B",
    "0xA37f62796cE8Ff995c3B67E46d875f33E0Fe692D",
    "0x10a72f356c8f2B6d8CEa25B555b0FdE81917d048",
    "0xEA84dB7c0C8fDCfB1f408139C27Df07AA2349867",
    "0x648b39396c50d137cEA473b1cBaa4D6F14e33582",
    "0x66CB41cE928A8E1afa82FD656a5E72386088aBE2",
    "0xa68088B74e842132aDa4115A6b6eB817e4461510"
  ],
  "solcInputHash": "5ccfdcda283821b92e1e8b333b532f3e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_corn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wheat\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_beans\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_barley\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_meal\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_flour\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oil\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_malt\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"barley\",\"outputs\":[{\"internalType\":\"contract ICrop\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beans\",\"outputs\":[{\"internalType\":\"contract ICrop\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearDisaster\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"corn\",\"outputs\":[{\"internalType\":\"contract ICrop\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disaster\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flour\",\"outputs\":[{\"internalType\":\"contract IRefinedResource\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRefiningCosts\",\"outputs\":[{\"internalType\":\"uint8[4]\",\"name\":\"\",\"type\":\"uint8[4]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"summoner\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"makeFlour\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"summoner\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"makeMalt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"summoner\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"makeMeal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"summoner\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"makeOil\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"malt\",\"outputs\":[{\"internalType\":\"contract IRefinedResource\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"meal\",\"outputs\":[{\"internalType\":\"contract IRefinedResource\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oil\",\"outputs\":[{\"internalType\":\"contract IRefinedResource\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pausers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"refiningCosts\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setDisaster\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"cornCost\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"wheatCost\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"beansCost\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"barleyCost\",\"type\":\"uint8\"}],\"name\":\"setRefiningCosts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wheat\",\"outputs\":[{\"internalType\":\"contract ICrop\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mill/Mill.sol\":\"Mill\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/abstracts/HasDisaster.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"./Pausable.sol\\\";\\nimport \\\"./Ownable.sol\\\";\\n\\nabstract contract HasDisaster is Pausable, Ownable {\\n  address public disaster;\\n\\n  constructor() {\\n    disaster = address(0);\\n  }\\n\\n  function setDisaster(address _addr) external {\\n    require(_isOwner(msg.sender), \\\"Must be owner\\\");\\n    _addPauser(_addr);\\n    disaster = _addr;\\n    _pause();\\n  }\\n\\n  function clearDisaster() external {\\n    require(\\n      _isOwner(msg.sender) || _isDisaster(msg.sender),\\n      \\\"Must be owner or disaster\\\"\\n    );\\n    _removePauser(disaster);\\n    disaster = address(0);\\n    _unpause();\\n  }\\n\\n  function _isDisaster(address _addr) internal view returns (bool) {\\n    return disaster == _addr;\\n  }\\n}\\n\",\"keccak256\":\"0x96cf001291e787aaa8c8364756d5d5c87d6f4acdec2da338df2a1921c6aaccf1\",\"license\":\"MIT\"},\"contracts/abstracts/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nabstract contract Ownable {\\n  address public owner;\\n\\n  constructor() {\\n    owner = msg.sender;\\n  }\\n\\n  function _isOwner(address addr) internal view returns (bool) {\\n    return owner == addr;\\n  }\\n\\n  function _setOwner(address addr) internal returns (bool) {\\n    owner = addr;\\n    return true;\\n  }\\n}\\n\",\"keccak256\":\"0xc4263a694a12743fea22f2eaae9094cc65e79204898548d8fc8916231dcf86bd\",\"license\":\"MIT\"},\"contracts/abstracts/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nabstract contract Pausable {\\n  bool public paused;\\n  mapping(address => bool) public pausers;\\n\\n  constructor() {\\n    paused = false;\\n    pausers[msg.sender] = true;\\n  }\\n\\n  function _isPaused() internal view returns (bool) {\\n    return paused == true;\\n  }\\n\\n  function pause() external returns (bool) {\\n    require(pausers[msg.sender], \\\"Pause denied\\\");\\n    _pause();\\n    return true;\\n  }\\n\\n  function unpause() external returns (bool) {\\n    require(pausers[msg.sender], \\\"Unpause denied\\\");\\n    _unpause();\\n    return true;\\n  }\\n\\n  function _addPauser(address addr) internal returns (bool) {\\n    pausers[addr] = true;\\n    return true;\\n  }\\n\\n  function _removePauser(address addr) internal returns (bool) {\\n    pausers[addr] = false;\\n    return true;\\n  }\\n\\n  function _pause() internal {\\n    paused = true;\\n  }\\n\\n  function _unpause() internal {\\n    paused = false;\\n  }\\n}\\n\",\"keccak256\":\"0x97aa1cffaa62bf33d2d70b57e516c689c9cba0c0a6af2ea3c8662f04d4c85bb6\",\"license\":\"MIT\"},\"contracts/abstracts/Rarity.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ninterface IRarity {\\n  function level(uint256) external view returns (uint256);\\n\\n  function getApproved(uint256) external view returns (address);\\n\\n  function isApprovedForAll(address owner, address operator)\\n    external\\n    view\\n    returns (bool);\\n\\n  function ownerOf(uint256) external view returns (address);\\n\\n  function summoner(uint256)\\n    external\\n    view\\n    returns (\\n      uint256,\\n      uint256,\\n      uint256,\\n      uint256\\n    );\\n\\n  function adventure(uint256) external;\\n}\\n\\ninterface IRarityAttributes {\\n  function ability_scores(uint256)\\n    external\\n    view\\n    returns (\\n      uint32,\\n      uint32,\\n      uint32,\\n      uint32,\\n      uint32,\\n      uint32\\n    );\\n}\\n\\ninterface IRarityRandomCodex {\\n  function d20(uint256) external view returns (uint256);\\n}\\n\\nabstract contract Rarity {\\n  IRarity constant _rm = IRarity(0xce761D788DF608BD21bdd59d6f4B54b2e27F25Bb);\\n  IRarityAttributes constant _attr =\\n    IRarityAttributes(0xB5F5AF1087A8DA62A23b08C00C6ec9af21F397a1);\\n  IRarityRandomCodex constant _random =\\n    IRarityRandomCodex(0x7426dBE5207C2b5DaC57d8e55F0959fcD99661D4);\\n\\n  constructor() {}\\n\\n  function _isRarityOwner(uint256 _summoner) internal view returns (bool) {\\n    return _rm.ownerOf(_summoner) == msg.sender;\\n  }\\n\\n  function _isRarityApproved(uint256 _summoner) internal view returns (bool) {\\n    return\\n      _rm.getApproved(_summoner) == msg.sender ||\\n      _rm.isApprovedForAll(_rm.ownerOf(_summoner), msg.sender);\\n  }\\n\\n  function _isRarityApprovedOrOwner(uint256 _summoner)\\n    internal\\n    view\\n    returns (bool)\\n  {\\n    return _isRarityApproved(_summoner) || _isRarityOwner(_summoner);\\n  }\\n\\n  function _getRarity() internal pure returns (IRarity) {\\n    return _rm;\\n  }\\n\\n  function _getRarityAttributes() internal pure returns (IRarityAttributes) {\\n    return _attr;\\n  }\\n\\n  function _getRarityRandom() internal pure returns (IRarityRandomCodex) {\\n    return _random;\\n  }\\n\\n  function _getSummonerAttributes(uint256 _summoner)\\n    internal\\n    view\\n    returns (uint32[6] memory)\\n  {\\n    (\\n      uint32 _str,\\n      uint32 _dex,\\n      uint32 _con,\\n      uint32 _int,\\n      uint32 _wis,\\n      uint32 _cha\\n    ) = _attr.ability_scores(_summoner);\\n    uint32[6] memory scores = [_str, _dex, _con, _int, _wis, _cha];\\n    return scores;\\n  }\\n\\n  function _getSummoner(uint256 _summoner)\\n    internal\\n    view\\n    returns (uint256[4] memory)\\n  {\\n    (uint256 _xp, uint256 _log, uint256 _class, uint256 _level) = _rm.summoner(\\n      _summoner\\n    );\\n    uint256[4] memory result = [_xp, _log, _class, _level];\\n    return result;\\n  }\\n}\\n\",\"keccak256\":\"0x3bbc694ec9e23e448ca912f2bd9510c567a2e69e582725f6b02e9e617b35f405\",\"license\":\"MIT\"},\"contracts/mill/Mill.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"../abstracts/HasDisaster.sol\\\";\\nimport \\\"../abstracts/Rarity.sol\\\";\\n\\ninterface ICrop {\\n  function burnFrom(uint256, uint256) external;\\n\\n  function balanceOf(uint256) external view returns (uint256);\\n}\\n\\ninterface IRefinedResource {\\n  function mint(uint256 summoner, uint256 amount) external;\\n}\\n\\ncontract Mill is HasDisaster, Rarity {\\n  uint8[4] public refiningCosts = [2, 2, 2, 2];\\n\\n  ICrop public corn;\\n  ICrop public wheat;\\n  ICrop public beans;\\n  ICrop public barley;\\n\\n  IRefinedResource public meal;\\n  IRefinedResource public flour;\\n  IRefinedResource public oil;\\n  IRefinedResource public malt;\\n\\n  constructor(\\n    address _corn,\\n    address _wheat,\\n    address _beans,\\n    address _barley,\\n    address _meal,\\n    address _flour,\\n    address _oil,\\n    address _malt\\n  ) {\\n    corn = ICrop(_corn);\\n    wheat = ICrop(_wheat);\\n    beans = ICrop(_beans);\\n    barley = ICrop(_barley);\\n    meal = IRefinedResource(_meal);\\n    flour = IRefinedResource(_flour);\\n    oil = IRefinedResource(_oil);\\n    malt = IRefinedResource(_malt);\\n  }\\n\\n  function makeMeal(uint256 summoner, uint256 amount) external {\\n    _refine(summoner, meal, corn, amount, refiningCosts[0]);\\n  }\\n\\n  function makeFlour(uint256 summoner, uint256 amount) external {\\n    _refine(summoner, flour, wheat, amount, refiningCosts[1]);\\n  }\\n\\n  function makeOil(uint256 summoner, uint256 amount) external {\\n    _refine(summoner, oil, beans, amount, refiningCosts[2]);\\n  }\\n\\n  function makeMalt(uint256 summoner, uint256 amount) external {\\n    _refine(summoner, malt, barley, amount, refiningCosts[3]);\\n  }\\n\\n  function getRefiningCosts() external view returns (uint8[4] memory) {\\n    return refiningCosts;\\n  }\\n\\n  function setRefiningCosts(\\n    uint8 cornCost,\\n    uint8 wheatCost,\\n    uint8 beansCost,\\n    uint8 barleyCost\\n  ) external {\\n    require(_isOwner(msg.sender), \\\"Must be owner\\\");\\n    refiningCosts = [cornCost, wheatCost, beansCost, barleyCost];\\n  }\\n\\n  function _refine(\\n    uint256 summoner,\\n    IRefinedResource resource,\\n    ICrop crop,\\n    uint256 amount,\\n    uint8 refiningCost\\n  ) internal {\\n    require(_isRarityOwner(summoner), \\\"Must own NFT\\\");\\n    require(_isPaused() == false, \\\"Mill not available\\\");\\n    require(amount >= 1 * 1e18, \\\"Amount too small\\\");\\n    uint256 balance = crop.balanceOf(summoner);\\n    require(amount * refiningCost <= balance, \\\"Crop balance too low\\\");\\n    crop.burnFrom(summoner, amount * refiningCost);\\n    resource.mint(summoner, amount);\\n  }\\n}\\n\",\"keccak256\":\"0x89c843c332635ffef977789e821174fdba1f0cd80feeea2600566856ed0303f3\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c806381a20a7a116100c3578063abedcf841161007c578063abedcf841461035a578063b1148de914610376578063bff7e49f14610392578063dff87bcb146103b0578063f4d81671146103ce578063fe86673c146103ea5761014d565b806381a20a7a146102aa5780638456cb59146102c65780638da5cb5b146102e457806392c8c45e14610302578063a9300b1e14610320578063aae446ef1461033e5761014d565b80634d34f855116101155780634d34f855146101fa578063529522a914610216578063556fe775146102345780635c975abb146102525780636240f0f41461027057806380f51c121461027a5761014d565b80630c923d83146101525780630e357738146101705780632e2f4ca31461018e5780633c94356b146101ac5780633f4ba83a146101dc575b600080fd5b61015a610408565b6040516101679190611567565b60405180910390f35b61017861042e565b60405161018591906115b8565b60405180910390f35b610196610454565b6040516101a39190611582565b60405180910390f35b6101c660048036038101906101c19190611276565b6104c4565b6040516101d39190611732565b60405180910390f35b6101e46104ee565b6040516101f1919061159d565b60405180910390f35b610214600480360381019061020f919061121c565b61058b565b005b61021e610629565b60405161022b91906115d3565b60405180910390f35b61023c61064f565b60405161024991906115d3565b60405180910390f35b61025a610675565b604051610267919061159d565b60405180910390f35b610278610686565b005b610294600480360381019061028f919061121c565b610756565b6040516102a1919061159d565b60405180910390f35b6102c460048036038101906102bf91906112d0565b610776565b005b6102ce6107f5565b6040516102db919061159d565b60405180910390f35b6102ec610892565b6040516102f99190611567565b60405180910390f35b61030a6108b8565b60405161031791906115b8565b60405180910390f35b6103286108de565b60405161033591906115b8565b60405180910390f35b61035860048036038101906103539190611310565b610904565b005b610374600480360381019061036f91906112d0565b61099c565b005b610390600480360381019061038b91906112d0565b610a1b565b005b61039a610a9a565b6040516103a791906115d3565b60405180910390f35b6103b8610ac0565b6040516103c591906115d3565b60405180910390f35b6103e860048036038101906103e391906112d0565b610ae6565b005b6103f2610b65565b6040516103ff91906115b8565b60405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61045c6110da565b600480806020026040519081016040528092919082600480156104ba576020028201916000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116104835790505b5050505050905090565b600481600481106104d457600080fd5b60209182820401919006915054906101000a900460ff1681565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661057c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610573906116ce565b60405180910390fd5b610584610b8b565b6001905090565b61059433610ba7565b6105d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ca9061166e565b60405180910390fd5b6105dc81610c01565b5080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610626610c63565b50565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900460ff1681565b61068f33610ba7565b8061069f575061069e33610c7f565b5b6106de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d5906115ee565b60405180910390fd5b610709600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610cd9565b506000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610754610b8b565b565b60016020528060005260406000206000915054906101000a900460ff1681565b6107f182600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460046000600481106107d6576107d56118b1565b5b602091828204019190069054906101000a900460ff16610d3b565b5050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610883576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087a9061164e565b60405180910390fd5b61088b610c63565b6001905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61090d33610ba7565b61094c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109439061166e565b60405180910390fd5b60405180608001604052808560ff1660ff1681526020018460ff1660ff1681526020018360ff1660ff1681526020018260ff1660ff1681525060049060046109959291906110fc565b5050505050565b610a1782600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460046002600481106109fc576109fb6118b1565b5b602091828204019190069054906101000a900460ff16610d3b565b5050565b610a9682600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846004600360048110610a7b57610a7a6118b1565b5b602091828204019190069054906101000a900460ff16610d3b565b5050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b6182600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846004600160048110610b4657610b456118b1565b5b602091828204019190069054906101000a900460ff16610d3b565b5050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060006101000a81548160ff021916908315150217905550565b60008173ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16149050919050565b600060018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060019050919050565b60016000806101000a81548160ff021916908315150217905550565b60008173ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16149050919050565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060019050919050565b610d4485610fea565b610d83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7a9061162e565b60405180910390fd5b60001515610d8f6110be565b151514610dd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc89061168e565b60405180910390fd5b670de0b6b3a7640000821015610e1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e139061160e565b60405180910390fd5b60008373ffffffffffffffffffffffffffffffffffffffff16639cc7f708876040518263ffffffff1660e01b8152600401610e5791906116ee565b60206040518083038186803b158015610e6f57600080fd5b505afa158015610e83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea791906112a3565b9050808260ff1684610eb9919061178b565b1115610efa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef1906116ae565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff16638769fd41878460ff1686610f26919061178b565b6040518363ffffffff1660e01b8152600401610f43929190611709565b600060405180830381600087803b158015610f5d57600080fd5b505af1158015610f71573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff16631b2ef1ca87856040518363ffffffff1660e01b8152600401610fb0929190611709565b600060405180830381600087803b158015610fca57600080fd5b505af1158015610fde573d6000803e3d6000fd5b50505050505050505050565b60003373ffffffffffffffffffffffffffffffffffffffff1673ce761d788df608bd21bdd59d6f4b54b2e27f25bb73ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b815260040161105091906116ee565b60206040518083038186803b15801561106857600080fd5b505afa15801561107c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a09190611249565b73ffffffffffffffffffffffffffffffffffffffff16149050919050565b60006001151560008054906101000a900460ff16151514905090565b6040518060800160405280600490602082028036833780820191505090505090565b826004601f016020900481019282156111855791602002820160005b8382111561115657835183826101000a81548160ff021916908360ff1602179055509260200192600101602081600001049283019260010302611118565b80156111835782816101000a81549060ff0219169055600101602081600001049283019260010302611156565b505b5090506111929190611196565b5090565b5b808211156111af576000816000905550600101611197565b5090565b6000813590506111c281611a2d565b92915050565b6000815190506111d781611a2d565b92915050565b6000813590506111ec81611a44565b92915050565b60008151905061120181611a44565b92915050565b60008135905061121681611a5b565b92915050565b600060208284031215611232576112316118e0565b5b6000611240848285016111b3565b91505092915050565b60006020828403121561125f5761125e6118e0565b5b600061126d848285016111c8565b91505092915050565b60006020828403121561128c5761128b6118e0565b5b600061129a848285016111dd565b91505092915050565b6000602082840312156112b9576112b86118e0565b5b60006112c7848285016111f2565b91505092915050565b600080604083850312156112e7576112e66118e0565b5b60006112f5858286016111dd565b9250506020611306858286016111dd565b9150509250929050565b6000806000806080858703121561132a576113296118e0565b5b600061133887828801611207565b945050602061134987828801611207565b935050604061135a87828801611207565b925050606061136b87828801611207565b91505092959194509250565b60006113838383611549565b60208301905092915050565b611398816117e5565b82525050565b6113a781611757565b6113b1818461176f565b92506113bc8261174d565b8060005b838110156113ed5781516113d48782611377565b96506113df83611762565b9250506001810190506113c0565b505050505050565b6113fe816117f7565b82525050565b61140d8161183a565b82525050565b61141c8161184c565b82525050565b600061142f60198361177a565b915061143a826118e5565b602082019050919050565b600061145260108361177a565b915061145d8261190e565b602082019050919050565b6000611475600c8361177a565b915061148082611937565b602082019050919050565b6000611498600c8361177a565b91506114a382611960565b602082019050919050565b60006114bb600d8361177a565b91506114c682611989565b602082019050919050565b60006114de60128361177a565b91506114e9826119b2565b602082019050919050565b600061150160148361177a565b915061150c826119db565b602082019050919050565b6000611524600e8361177a565b915061152f82611a04565b602082019050919050565b61154381611823565b82525050565b6115528161182d565b82525050565b6115618161182d565b82525050565b600060208201905061157c600083018461138f565b92915050565b6000608082019050611597600083018461139e565b92915050565b60006020820190506115b260008301846113f5565b92915050565b60006020820190506115cd6000830184611404565b92915050565b60006020820190506115e86000830184611413565b92915050565b6000602082019050818103600083015261160781611422565b9050919050565b6000602082019050818103600083015261162781611445565b9050919050565b6000602082019050818103600083015261164781611468565b9050919050565b600060208201905081810360008301526116678161148b565b9050919050565b60006020820190508181036000830152611687816114ae565b9050919050565b600060208201905081810360008301526116a7816114d1565b9050919050565b600060208201905081810360008301526116c7816114f4565b9050919050565b600060208201905081810360008301526116e781611517565b9050919050565b6000602082019050611703600083018461153a565b92915050565b600060408201905061171e600083018561153a565b61172b602083018461153a565b9392505050565b60006020820190506117476000830184611558565b92915050565b6000819050919050565b600060049050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b600061179682611823565b91506117a183611823565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156117da576117d9611882565b5b828202905092915050565b60006117f082611803565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006118458261185e565b9050919050565b60006118578261185e565b9050919050565b600061186982611870565b9050919050565b600061187b82611803565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b7f4d757374206265206f776e6572206f7220646973617374657200000000000000600082015250565b7f416d6f756e7420746f6f20736d616c6c00000000000000000000000000000000600082015250565b7f4d757374206f776e204e46540000000000000000000000000000000000000000600082015250565b7f50617573652064656e6965640000000000000000000000000000000000000000600082015250565b7f4d757374206265206f776e657200000000000000000000000000000000000000600082015250565b7f4d696c6c206e6f7420617661696c61626c650000000000000000000000000000600082015250565b7f43726f702062616c616e636520746f6f206c6f77000000000000000000000000600082015250565b7f556e70617573652064656e696564000000000000000000000000000000000000600082015250565b611a36816117e5565b8114611a4157600080fd5b50565b611a4d81611823565b8114611a5857600080fd5b50565b611a648161182d565b8114611a6f57600080fd5b5056fea2646970667358221220ea607f49eb4c1455c364a5379e7c7c6a39432df33a6e66630b0a52ada08d0ce564736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 133,
        "contract": "contracts/mill/Mill.sol:Mill",
        "label": "paused",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 137,
        "contract": "contracts/mill/Mill.sol:Mill",
        "label": "pausers",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 93,
        "contract": "contracts/mill/Mill.sol:Mill",
        "label": "owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 9,
        "contract": "contracts/mill/Mill.sol:Mill",
        "label": "disaster",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 554,
        "contract": "contracts/mill/Mill.sol:Mill",
        "label": "refiningCosts",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_uint8)4_storage"
      },
      {
        "astId": 557,
        "contract": "contracts/mill/Mill.sol:Mill",
        "label": "corn",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(ICrop)533"
      },
      {
        "astId": 560,
        "contract": "contracts/mill/Mill.sol:Mill",
        "label": "wheat",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(ICrop)533"
      },
      {
        "astId": 563,
        "contract": "contracts/mill/Mill.sol:Mill",
        "label": "beans",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(ICrop)533"
      },
      {
        "astId": 566,
        "contract": "contracts/mill/Mill.sol:Mill",
        "label": "barley",
        "offset": 0,
        "slot": "8",
        "type": "t_contract(ICrop)533"
      },
      {
        "astId": 569,
        "contract": "contracts/mill/Mill.sol:Mill",
        "label": "meal",
        "offset": 0,
        "slot": "9",
        "type": "t_contract(IRefinedResource)541"
      },
      {
        "astId": 572,
        "contract": "contracts/mill/Mill.sol:Mill",
        "label": "flour",
        "offset": 0,
        "slot": "10",
        "type": "t_contract(IRefinedResource)541"
      },
      {
        "astId": 575,
        "contract": "contracts/mill/Mill.sol:Mill",
        "label": "oil",
        "offset": 0,
        "slot": "11",
        "type": "t_contract(IRefinedResource)541"
      },
      {
        "astId": 578,
        "contract": "contracts/mill/Mill.sol:Mill",
        "label": "malt",
        "offset": 0,
        "slot": "12",
        "type": "t_contract(IRefinedResource)541"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint8)4_storage": {
        "base": "t_uint8",
        "encoding": "inplace",
        "label": "uint8[4]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(ICrop)533": {
        "encoding": "inplace",
        "label": "contract ICrop",
        "numberOfBytes": "20"
      },
      "t_contract(IRefinedResource)541": {
        "encoding": "inplace",
        "label": "contract IRefinedResource",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}